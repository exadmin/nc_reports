{"models":[{"qubership-name":"qubership-profiler-agent","category":"n/a","subcategory":"n/a","alternatives":["n/a"],"reasons":"The provided content describes a plugin for instrumenting HTTP context in Tomcat <= 9.x, WildFly <= 26.x, and Spring Boot <= 2.x, but it does not provide enough information to categorize it within the CNCF landscape. The CNCF landscape primarily focuses on cloud-native technologies like container orchestration, service meshes, monitoring, and logging, whereas this plugin seems to be specific to Java web servers and frameworks. Therefore, it does not clearly fit into any CNCF category or subcategory."},{"qubership-name":"qubership-core-lib-go-dbaas-mongo-client","category":"Database","subcategory":"NewSQL","alternatives":["Vitess","TiDB","CockroachDB"],"reasons":"The provided file describes a Go client library for interacting with MongoDB databases, specifically designed to work with multi-tenancy and service databases. It supports features like connection pooling, SSL/TLS, and integration with dbas-aggregator. Given its focus on database interaction and MongoDB, it best fits under the 'Database' category in the CNCF landscape. The 'NewSQL' subcategory is chosen because MongoDB is a document-oriented database that bridges traditional SQL and NoSQL databases, and the library provides advanced features like multi-tenancy and connection management. Alternatives like Vitess, TiDB, and CockroachDB are also NewSQL databases that offer similar scalability and flexibility."},{"qubership-name":"qubership-integration-catalog-library","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Backstage","Tilt","Shipa"],"reasons":"The description mentions that 'Catalog Library' is part of a global integration solution and involves building a proper code transition between 'Runtime Catalog' and 'Design Time Catalog' microservices. This suggests it is related to application development and management, specifically in the context of microservices and integration. The CNCF category 'App Definition and Development' fits well here, with 'Application Definition & Image Build' as a subcategory. Alternatives like Backstage, Tilt, and Shipa are also focused on developer tools and application management, making them suitable comparisons."},{"qubership-name":"qubership-graylog-obfuscation-plugin","category":"Security","subcategory":"Policy & Governance","alternatives":["Open Policy Agent (OPA)","Falco","Kyverno"],"reasons":"The provided file describes a plugin for automatic analysis and obfuscation of input log messages, which aligns with security and policy enforcement tools in the CNCF landscape. The plugin seems to focus on log obfuscation, which is a security feature to protect sensitive data. Alternatives like Open Policy Agent (OPA), Falco, and Kyverno are also focused on security and policy enforcement, making them suitable comparisons. The mention of SuperLinter suggests integration with CI/CD pipelines, which is common in policy and governance tools."},{"qubership-name":"qubership-core-lib-go-bg-state-monitor","category":"Observability and Analysis","subcategory":"Monitoring","alternatives":["Prometheus","Thanos","OpenTelemetry"],"reasons":"The provided content describes a Go library for monitoring state, which aligns with the 'Observability and Analysis' category in the CNCF landscape, specifically under 'Monitoring'. The library appears to interact with Consul for state management, suggesting it's used for monitoring distributed systems. Alternatives like Prometheus, Thanos, and OpenTelemetry are also monitoring solutions within the CNCF landscape that provide similar functionalities for tracking system states and metrics."},{"qubership-name":"qubership-apihub-compatibility-suites","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Kong","Apigee","Tyk"],"reasons":"The provided file describes a solution focused on API compatibility and changes classification, specifically mentioning OpenAPI and GraphQL. This aligns with the 'API Gateway' subcategory under 'App Definition and Development' in the CNCF landscape. The solution provides tools for managing and testing API changes, which is a core functionality of API gateways. Alternatives like Kong, Apigee, and Tyk are listed as they offer similar API management and testing capabilities."},{"qubership-name":"qubership-maas","category":"Messaging and Streaming","subcategory":"Message Brokers","alternatives":["RabbitMQ","Kafka","NATS","Pulsar"],"reasons":"The solution described, Maas (Messaging as a Service), is focused on managing messaging entities like queues, exchanges, and topics on RabbitMQ and Kafka brokers. It provides declarative configuration and REST API for managing these entities, which aligns with the messaging and streaming category in the CNCF landscape. The solution also supports Blue/Green deployments and integrates with microservices, which are common use cases in cloud-native messaging systems. Alternatives like RabbitMQ, Kafka, NATS, and Pulsar are also part of the CNCF landscape and serve similar purposes in messaging and streaming."},{"qubership-name":"qubership-opensearch-curator","category":"Management and Governance","subcategory":"Cost Management","alternatives":["kube-janitor","kube-cleanup","kube-downscaler"],"reasons":"The Elasticsearch Indices Cleaner is a tool designed to manage and clean up Elasticsearch indices based on predefined patterns, which aligns with the 'Management and Governance' category in the CNCF landscape. Specifically, it falls under 'Cost Management' as it helps in reducing storage costs by deleting old or unnecessary indices. Alternatives like 'kube-janitor', 'kube-cleanup', and 'kube-downscaler' serve similar purposes in managing and cleaning up resources in a Kubernetes environment, though they are not specific to Elasticsearch."},{"qubership-name":"qubership-jaeger","category":"Observability and Analysis","subcategory":"Monitoring","alternatives":["Prometheus","OpenMetrics","Thanos"],"reasons":"The description indicates that the 'Readiness Probe' is used for executing checks and providing custom readiness probes for Jaeger, which is a part of monitoring and observability in cloud-native environments. The solution fits well within the 'Observability and Analysis' category of the CNCF landscape, specifically under 'Monitoring'. Alternatives like Prometheus, OpenMetrics, and Thanos are listed as they are prominent CNCF projects in the monitoring space that also deal with health checks and system readiness."},{"qubership-name":"qubership-renovate-config","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided content is insufficient to determine the category or subcategory within the CNCF landscape. The text 'qubership-renovate-config' does not provide enough context about the solution's purpose, functionality, or components to make an accurate classification. More information is needed to identify similar solutions in the CNCF landscape."},{"qubership-name":"qubership-nifi","category":"App Definition and Development","subcategory":"Workflow Orchestration","alternatives":["Apache NiFi","Argo Workflows","Tekton Pipelines"],"reasons":"The solution described is a fork of Apache NiFi, which is a dataflow platform designed to automate the movement of data between systems. It fits into the 'Workflow Orchestration' subcategory under 'App Definition and Development' in the CNCF landscape because it focuses on managing and automating data workflows. The additional features like integration with Consul for configuration management and automated configuration restore further emphasize its role in workflow orchestration. Alternatives like Apache NiFi (the original), Argo Workflows, and Tekton Pipelines are also workflow orchestration tools that manage and automate workflows, making them suitable alternatives."},{"qubership-name":"qubership-mongodb-driver","category":"Database","subcategory":"n/a","alternatives":["MongoDB","PostgreSQL","MySQL","Cassandra","CockroachDB"],"reasons":"The file mentions 'mongodb-driver' in the title, which suggests that the solution is related to MongoDB, a popular NoSQL database. The content provides instructions on how to get started, integrate with tools, collaborate with a team, and deploy, which are common activities around database drivers. The alternatives listed are other well-known databases and database drivers within the CNCF landscape that serve similar purposes."},{"qubership-name":"qubership-dbaas-adapter-core","category":"Database","subcategory":"n/a","alternatives":["Vitess","TiKV","CloudNativePG"],"reasons":"The description mentions 'Kubership DBaaS Adapter Core' as a base library for all Kubership DBaaS adapters, which suggests it is related to database management in a cloud-native environment. Given the focus on databases and adapters, the most fitting CNCF category is 'Database'. Alternatives like Vitess, TiKV, and CloudNativePG are also cloud-native database solutions or tools that facilitate database operations in Kubernetes environments."},{"qubership-name":"qubership-integration-sessions-management","category":"App Definition and Development","subcategory":"Microservices Management","alternatives":["Istio","Linkerd","Consul"],"reasons":"The provided description mentions a microservice that manages sessions created during the execution of integration flows called 'chains' and stores these sessions in OpenSearch. This functionality aligns with microservices management, which is a part of the 'App Definition and Development' category in the CNCF landscape. Alternatives like Istio, Linkerd, and Consul are also involved in managing microservices and their communications, making them relevant comparisons."},{"qubership-name":"qubership-core-arquillian-cube-extension","category":"Testing","subcategory":"Integration Testing","alternatives":["Testcontainers","Kubernetes Test Framework (KTF)","KubeTest"],"reasons":"The provided file describes a JUnit-5 extension designed to facilitate integration testing with Kubernetes. It includes features like port forwarding, token service for authentication, and support for multiple Kubernetes clouds, which are typical for integration testing tools in cloud-native environments. The solution fits best under the 'Testing' category in the CNCF landscape, specifically under 'Integration Testing' subcategory. Alternatives like Testcontainers, Kubernetes Test Framework (KTF), and KubeTest are also focused on simplifying Kubernetes integration testing."},{"qubership-name":"qubership-maas-client-quarkus","category":"App Definition and Development","subcategory":"Streaming & Messaging","alternatives":["Apache Kafka","RabbitMQ","NATS"],"reasons":"The provided file describes a Quarkus extension for a Maas client, which includes support for Kafka and RabbitMQ. This suggests that the solution is related to messaging and streaming, which falls under the 'Streaming & Messaging' subcategory of the 'App Definition and Development' category in the CNCF landscape. Alternatives like Apache Kafka, RabbitMQ, and NATS are also part of this subcategory and provide similar functionalities."},{"qubership-name":"qubership-core-lib-go-maas-client","category":"Messaging and Streaming","subcategory":"Message Brokers","alternatives":["Apache Kafka","RabbitMQ","NATS","Pulsar"],"reasons":"The provided file describes a Go client for performing operations with Maas, specifically focusing on Kafka and RabbitMQ integrations. The client supports operations such as creating, reading, and deleting topics, as well as message consumption in Blue-Green scenarios. Given the focus on message brokers and streaming, the solution best fits under the 'Messaging and Streaming' category of the CNCF landscape, with 'Message Brokers' as the subcategory. Alternatives like Apache Kafka, RabbitMQ, NATS, and Pulsar are listed as they are prominent CNCF projects in the same space."},{"qubership-name":"qubership-core-lib-go-dbaas-opensearch-client","category":"Database","subcategory":"Search Engine","alternatives":["Elasticsearch","Apache Solr","OpenSearch"],"reasons":"The provided file describes a Go client library for interacting with OpenSearch databases, specifically designed to work with multi-tenancy and service databases. It provides functionality to create, manage, and query OpenSearch indices, aliases, and templates. The solution fits into the 'Database' category of the CNCF landscape, specifically under the 'Search Engine' subcategory, as it is a client library for OpenSearch, which is a search engine. Alternatives like Elasticsearch, Apache Solr, and OpenSearch are listed as they are similar search engine solutions within the CNCF ecosystem."},{"qubership-name":"qubership-tcp-duplicator","category":"Networking","subcategory":"Service Proxy","alternatives":["Envoy","Linkerd","NGINX"],"reasons":"The solution described is a TCP proxy that mirrors data to configured servers, which aligns with the networking category in the CNCF landscape. Specifically, it falls under the 'Service Proxy' subcategory as it acts as an intermediary for TCP traffic. Alternatives like Envoy, Linkerd, and NGINX are also service proxies that handle traffic routing and mirroring, making them suitable comparisons. The solution's focus on TCP-level operations without higher-level protocol support further justifies this categorization."},{"qubership-name":"qubership-log-generator","category":"Observability and Analysis","subcategory":"Logging","alternatives":["Fluentd","Loki","Elasticsearch (EFK stack)"],"reasons":"The Quberchip Log Generator is a tool designed to generate high load logs for performance testing and debugging purposes. It allows for the creation of logs based on predefined templates (Java, Go, JSON logs) and custom patterns, which aligns with the functionality of logging tools in the CNCF landscape. It provides metrics related to log generation and application performance, similar to other observability tools. The solution fits best under the 'Logging' subcategory of 'Observability and Analysis' in the CNCF landscape. Alternatives like Fluentd, Loki, and Elasticsearch are mentioned as they are prominent logging solutions within the CNCF ecosystem that handle log generation, aggregation, and analysis."},{"qubership-name":"pgskipper-monitoring-agent","category":"Monitoring","subcategory":"n/a","alternatives":["Prometheus","Thanos","VictoriaMetrics"],"reasons":"The name 'pgskipper-monitoring-agent' suggests that this is a monitoring agent, likely for PostgreSQL (given the 'pg' prefix). Since monitoring agents fall under the 'Monitoring' category in the CNCF landscape, this seems to be the best fit. Alternatives like Prometheus, Thanos, and VictoriaMetrics are also monitoring solutions in the CNCF ecosystem, though they are more general-purpose compared to what appears to be a PostgreSQL-specific agent."},{"qubership-name":"qubership-envgene-instance","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided base64-encoded content decodes to '# qubership-envgen-instance', which is insufficient to determine the category or subcategory within the CNCF landscape. No meaningful description or context is provided to analyze the solution's purpose, functionality, or components. Therefore, no accurate classification or alternatives can be suggested."},{"qubership-name":"qubership-integration-designtime-catalog","category":"App Definition and Development","subcategory":"Microservices Tools","alternatives":["Istio","Linkerd","Consul"],"reasons":"The provided description mentions a microservice handling design time configuration, which is part of a global integration solution. This fits well within the 'App Definition and Development' category, specifically under 'Microservices Tools', as it deals with configuration and integration of microservices. Alternatives like Istio, Linkerd, and Consul are listed as they are prominent tools in the CNCF landscape for managing microservices configurations and integrations."},{"qubership-name":"qubership-apihub-api-doc-viewer","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Apollo GraphQL","GraphQL Playground","GraphiQL","Swagger UI"],"reasons":"The provided solution is a library that renders JSON schemas, GraphQL schemas, and GraphAPI specifications in a human-readable way. It provides components like GraphQLOperationViewer and JsonSchemaViewer, which are used to visualize and interact with API schemas. This functionality is similar to tools like Apollo GraphQL, GraphQL Playground, GraphiQL, and Swagger UI, which are used for API documentation and exploration. These tools fall under the 'App Definition and Development' category in the CNCF landscape, specifically under 'API Gateway' as they facilitate API interaction and documentation."},{"qubership-name":"pgskipper-backup-daemon","category":"Database","subcategory":"Backup and Recovery","alternatives":["Velero","KubeDB","Stash"],"reasons":"The solution described is focused on periodic backups and recovery of PostgreSQL databases, which aligns with the 'Backup and Recovery' subcategory under 'Database' in the CNCF landscape. Similar solutions in the CNCF landscape include Velero (for general backup and recovery), KubeDB (for database management including backups), and Stash (for backup and recovery of Kubernetes workloads). The description mentions the ability to run backups periodically and recover databases, which is a core functionality of backup and recovery tools."},{"qubership-name":"qubership-diag-proxy","category":"Observability and Analysis","subcategory":"Tracing","alternatives":["Jaeger","Zipkin","OpenTelemetry"],"reasons":"The described solution, 'diag-proxy', is a proxy based on Nginx that facilitates the collection and forwarding of diagnostic information (profiling and tracing data) to respective collectors in different namespaces. It simplifies the configuration of addresses for profiling agents (like Profiler) and tracing agents (like Jaeger, Zipkin, or OpenTelemetry). This functionality aligns with the CNCF category of 'Observability and Analysis', specifically under 'Tracing', as it deals with the collection and management of trace data. Alternatives like Jaeger, Zipkin, and OpenTelemetry are listed as they are prominent CNCF projects that handle tracing data collection and analysis, similar to what 'diag-proxy' aims to facilitate."},{"qubership-name":"qubership-external-logging-installer","category":"Observability and Analysis","subcategory":"Logging","alternatives":["Fluent Bit","Promtail","OpenTelemetry Collector"],"reasons":"The provided file describes FluentD as a tool for collecting self logs from containers on a VM and sending them to Graylog. This functionality falls under the 'Logging' subcategory of 'Observability and Analysis' in the CNCF landscape. FluentD is a well-known log collector and processor, and alternatives like Fluent Bit (a lighter-weight version of FluentD), Promtail (part of the Grafana Loki stack), and OpenTelemetry Collector (which can also handle logs) are similar solutions within the CNCF ecosystem."},{"qubership-name":"qubership-core-context-propagation","category":"Observability and Analysis","subcategory":"Tracing","alternatives":["OpenTelemetry","Jaeger","Zipkin"],"reasons":"The solution described in the file is a context propagation framework designed to propagate values (such as headers, API versions, request IDs, etc.) between microservices. This functionality is crucial for distributed tracing, which is a key aspect of observability in cloud-native applications. The framework supports various propagation methods (REST, messaging) and integrates with Spring, Kafka, and RabbitMQ, similar to how OpenTelemetry, Jaeger, and Zipkin handle context propagation for tracing purposes. The solution fits best under the 'Observability and Analysis' category in the CNCF landscape, specifically under 'Tracing', as it provides the necessary tools to track and propagate context across service boundaries, which is essential for distributed tracing."},{"qubership-name":"qubership-nifi-registry","category":"App Definition and Development","subcategory":"Database","alternatives":["Apache NiFi Registry","PostgreSQL"],"reasons":"The solution described is a fork of Apache NiFi Registry with additional support for PostgreSQL database storage and configuration. It falls under the 'App Definition and Development' category because it is a tool designed to manage and version control data flows, which is a key aspect of application development. The 'Database' subcategory is chosen due to its enhanced support for PostgreSQL. Alternatives include the original Apache NiFi Registry and PostgreSQL, as they are directly related to the described functionality."},{"qubership-name":"qubership-grafana-reporter","category":"Monitoring","subcategory":"Dashboards","alternatives":["Grafana","Prometheus","Thanos","VictoriaMetrics"],"reasons":"The solution described is a Grafana reporter, which generates dashboard reports in PDF format. It integrates with Grafana to fetch dashboard data and render panels. This fits into the Monitoring category under Dashboards, as it is specifically designed to work with Grafana dashboards. Alternatives include other monitoring and dashboard solutions that are part of the CNCF landscape, such as Grafana itself, Prometheus, Thanos, and VictoriaMetrics, which are commonly used for monitoring and visualization in cloud-native environments."},{"qubership-name":"qubership-nosqldb-operator-core","category":"Database","subcategory":"Database Operator","alternatives":["KubeDB","Percona Operator for MySQL","Crunchy PostgreSQL Operator"],"reasons":"The provided file name 'qubership-nosqldb-operator-core' suggests that this is a Kubernetes operator for managing NoSQL databases. Operators fall under the 'Database' category in the CNCF landscape, specifically under the 'Database Operator' subcategory. Alternatives like KubeDB, Percona Operator for MySQL, and Crunchy PostgreSQL Operator are also Kubernetes operators that manage databases, making them suitable alternatives."},{"qubership-name":"qubership-inventory-tool-cli","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Helm","Kustomize","Skaffold"],"reasons":"The provided file describes a Java application build and packaging process using Maven, along with instructions for running and configuring the application. This fits well into the 'App Definition and Development' category of the CNCF landscape, specifically under 'Application Definition & Image Build' as it involves defining and building the application. Alternatives like Helm, Kustomize, and Skaffold are tools that also help in defining, building, and managing applications, though they are more Kubernetes-centric. The file does not provide enough information to determine if the solution is specifically for cloud-native environments, but the build and run instructions suggest it is more related to application development and packaging."},{"qubership-name":"qubership-disaster-recovery-daemon","category":"Orchestration & Management","subcategory":"Disaster Recovery","alternatives":["Velero","Kasten","OpenEBS"],"reasons":"The 'Qubership Disaster Recovery Daemon' (DRD) is a service that establishes communication between the Site Manager and the current cluster operator or disaster recovery controller. It provides features like managing disaster recovery resources and implementing DR controllers for services without an operator. This aligns with the CNCF category of 'Orchestration & Management' under 'Disaster Recovery' as it focuses on managing and recovering Kubernetes resources during disasters. Alternatives like Velero, Kasten, and OpenEBS are also part of the CNCF landscape and provide similar disaster recovery capabilities for Kubernetes environments."},{"qubership-name":"qubership-prometheus-adapter-operator","category":"n/a","subcategory":"n/a","alternatives":["n/a"],"reasons":"The provided content describes a directory containing configuration and templates for generating HTML/Markdown documentation of an AMS operator's custom resource definitions, using the 'gen-crd-api-reference-docs' project. However, it does not provide enough information to clearly determine a specific CNCF category or subcategory. The content seems related to documentation generation for Kubernetes CRDs, but without more details about the tool's functionality or purpose, a precise classification is not possible. The 'gen-crd-api-reference-docs' project itself is not listed in the CNCF landscape, and no clear alternatives can be suggested based on the given information."},{"qubership-name":"qubership-core-microservice-framework-extensions","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Spring Cloud Gateway","Kong","Envoy"],"reasons":"The provided file describes a framework extension for SpringDoc Swagger that adds additional functionality to handle secured requests (m2m, user, bearer) through Swagger UI. This fits well within the 'App Definition and Development' category as it pertains to API documentation and security, which are key aspects of API gateways. Alternatives like Spring Cloud Gateway, Kong, and Envoy are listed as they also handle API routing, security, and documentation, albeit in different contexts and with varying feature sets."},{"qubership-name":"qubership-kube-events-generator","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Argo Events","Knative Eventing","NATS Streaming"],"reasons":"The provided file describes a Kubernetes event generator, which is a tool for generating Kubernetes events. This falls under the 'App Definition and Development' category in the CNCF landscape, specifically under 'Application Definition & Image Build' as it involves creating and managing events within a Kubernetes environment. Alternatives like Argo Events, Knative Eventing, and NATS Streaming are also tools that handle event generation and management within cloud-native ecosystems."},{"qubership-name":"pgskipper-dbaas-adapter","category":"Database","subcategory":"n/a","alternatives":["Vitess","TiDB","CockroachDB"],"reasons":"The provided file describes a component that offers a REST API for logical database management, which aligns with the Database category in the CNCF landscape. The component appears to be a database adapter or middleware, which is why alternatives like Vitess, TiDB, and CockroachDB are suggested as they also provide database management capabilities. However, the subcategory is not specified due to insufficient details about the specific type of database management (e.g., SQL, NoSQL, distributed)."},{"qubership-name":"qubership-api-linter-service","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Kong","Traefik","Envoy"],"reasons":"The provided file describes a Golang microservice that provides a REST API for linting OAS (OpenAPI Specification) files. This functionality is typically associated with API gateways or API management tools, which fall under the 'App Definition and Development' category in the CNCF landscape. The subcategory 'API Gateway' is chosen because the service seems to focus on API-related operations. Alternatives like Kong, Traefik, and Envoy are listed as they are prominent CNCF projects in the API Gateway space. The note about the project being under development and not production-ready suggests that it's an early-stage tool, but the described functionality aligns well with API gateway services."},{"qubership-name":"qubership-core-quarkus-extensions","category":"App Definition and Development","subcategory":"Streaming & Messaging","alternatives":["Eclipse Vert.x","Spring Cloud Stream","Apache Kafka"],"reasons":"The provided file describes an extension for the Quarkus framework that enables running a STOMP server over WebSockets or standard WebSocket protocol. This functionality falls under the 'Streaming & Messaging' subcategory of the 'App Definition and Development' category in the CNCF landscape. The solution is focused on real-time messaging and communication, which aligns with the purpose of other CNCF projects like Eclipse Vert.x, Spring Cloud Stream, and Apache Kafka, which also provide capabilities for building real-time, event-driven applications. The STOMP protocol is specifically designed for messaging, making this a good fit for the 'Streaming & Messaging' subcategory."},{"qubership-name":"qubership-core-lib-go-rest-utils","category":"Service Mesh","subcategory":"API Gateway","alternatives":["Istio","Linkerd","Envoy","Kong"],"reasons":"The described solution is a library for route registration in a control plane, which allows microservices to make REST calls without knowing the URL host. It supports different types of routes (internal, private, public, and facade gateways) and integrates with OpenShift. This functionality aligns with API Gateway and Service Mesh components in the CNCF landscape, which manage traffic routing, load balancing, and service discovery. Alternatives like Istio, Linkerd, Envoy, and Kong provide similar capabilities in managing and routing traffic between services."},{"qubership-name":"qubership-apihub-http-spec","category":"API Infrastructure","subcategory":"API Specifications","alternatives":["Swagger","Apicurio","Kusk"],"reasons":"The provided file describes a converter for OpenAPI schemas to JSON schemas, which is a tool used in API development and specification management. This fits under the 'API Infrastructure' category in the CNCF landscape, specifically under 'API Specifications' as it deals with schema conversion and management. Alternatives like Swagger, Apicurio, and Kusk are also tools that handle API specifications and transformations, making them relevant alternatives."},{"qubership-name":"qubership-core-lib-go-dbaas-cassandra-client","category":"Database","subcategory":"NewSQL","alternatives":["Cassandra","ScyllaDB","CockroachDB"],"reasons":"The provided file describes a Go client library for interacting with Cassandra databases, specifically designed to work with multi-tenancy and service databases. It includes features like connection pooling, session management, and support for SSL/TLS. Given that Cassandra is a prominent NewSQL database and the library is tailored for Cassandra, the most fitting category in the CNCF landscape is 'Database' with the subcategory 'NewSQL'. Alternatives include other NewSQL databases like ScyllaDB (a Cassandra-compatible database) and CockroachDB (a distributed SQL database)."},{"qubership-name":"qubership-apihub-postman-collections","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Kong","Apigee","Tyk"],"reasons":"The provided content describes a solution for managing API keys, creating test data, and handling API requests, which aligns with the functionality of an API Gateway. The mention of 'apihub' and the process of creating API keys and managing access suggests a tool focused on API management. The alternatives listed are other well-known API gateways in the CNCF landscape that provide similar capabilities."},{"qubership-name":"qubership-apihub-nodejs-dev-image","category":"App Definition and Development","subcategory":"Development Environment","alternatives":["n/a"],"reasons":"The provided content describes a development environment setup with tools like Node, NPM, Yarn, Chrome, and Puppeteer. This fits best under the 'App Definition and Development' category in the CNCF landscape, specifically under 'Development Environment'. However, the description lacks specific details about a particular CNCF project or framework, so no direct alternatives are provided. The tools listed are common for local development rather than cloud-native tools, which might explain the lack of direct alternatives in the CNCF landscape."},{"qubership-name":"qubership-mistral","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Tekton","Argo","Cloud Native Buildpacks"],"reasons":"The provided content describes a process for creating custom actions within a Python library, specifically for Mistral, which involves setting up a Python package, defining custom actions, and building Docker images to include these actions. This aligns with the 'App Definition and Development' category in the CNCF landscape, particularly under 'Application Definition & Image Build', as it involves defining application components and building container images. Alternatives like Tekton, Argo, and Cloud Native Buildpacks are suitable as they provide frameworks for building and defining applications in a cloud-native environment, including CI/CD pipelines and image building."},{"qubership-name":"qubership-envgene","category":"App Definition and Development","subcategory":"Application Configuration","alternatives":["Kustomize","Helm","Jsonnet"],"reasons":"The provided file describes a tool named 'EnvGene' which is used for environment generation and configuration management. It involves defining environments, templates, and configurations in YAML files, which aligns with the 'Application Configuration' subcategory under 'App Definition and Development' in the CNCF landscape. Similar tools in this space include Kustomize, Helm, and Jsonnet, which are also used for managing and templating application configurations."},{"qubership-name":"base-images-module-base","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided base64 content 'IyBiYXNlLWltYWdlcy1tb2R1bGUtYmFzZQ==' decodes to '# base-images-module-base', which is insufficient to determine the category or subcategory of the solution within the CNCF landscape. No meaningful description or context was provided to analyze the solution's purpose, functionality, or its relation to CNCF categories. Therefore, all fields are marked as 'n/a' or empty where applicable."},{"qubership-name":"qubership-opentelemetry-helm-charts","category":"Observability and Analysis","subcategory":"Tracing","alternatives":["Jaeger","Zipkin","SkyWalking"],"reasons":"The provided file describes configurations for the OpenTelemetry Operator, which is a part of the OpenTelemetry project. OpenTelemetry is a set of APIs, libraries, agents, and instrumentation to enable observability in cloud-native applications. It falls under the 'Observability and Analysis' category in the CNCF landscape, specifically under the 'Tracing' subcategory, as it is primarily used for distributed tracing. Alternatives like Jaeger, Zipkin, and SkyWalking are also prominent CNCF projects in the same subcategory, providing similar functionalities for distributed tracing."},{"qubership-name":"qubership-consul","category":"n/a","subcategory":"n/a","alternatives":["n/a"],"reasons":"The provided content is insufficient to determine the specific CNCF category or subcategory for the Robot Framework. The description only mentions the usage of integration tests based on Robot Framework, but does not provide enough details about its functionality, architecture, or use cases to align it with a specific CNCF category. Additionally, no similar alternatives from the CNCF landscape can be identified based on the given information."},{"qubership-name":"pgskipper-pgbackrest-sidecar","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided content is insufficient to determine the category or subcategory within the CNCF landscape. The text appears to be a filename or a fragment without meaningful context about the solution's functionality, purpose, or components. More information is required to make an accurate classification."},{"qubership-name":"qubership-core-blue-green-state-monitor","category":"App Definition and Development","subcategory":"Application Configuration","alternatives":["Spring Cloud Config","Consul","etcd"],"reasons":"The provided file describes a Spring Boot library for configuration and state monitoring, specifically mentioning integration with Consul for configuration management. This aligns with the 'App Definition and Development' category in the CNCF landscape, particularly under 'Application Configuration' subcategory, where tools like Spring Cloud Config, Consul, and etcd are commonly used for managing application configurations in cloud-native environments. The library's focus on configuration and state publishing suggests it fits best in this category."},{"qubership-name":"qubership-maas-declarative-client-commons","category":"App Definition and Development","subcategory":"Streaming & Messaging","alternatives":["Apache Kafka","NATS","RabbitMQ","Pulsar"],"reasons":"The provided file describes a module that provides a common framework to decoratively create Kafka consumers and producers, which falls under the 'Streaming & Messaging' subcategory of the 'App Definition and Development' category in the CNCF landscape. The module is specifically designed to work with Kafka, and the connection properties for topics are received from Maas. Alternatives include other messaging systems like Apache Kafka (which is directly mentioned), NATS, RabbitMQ, and Pulsar, which are also part of the CNCF landscape and serve similar purposes."},{"qubership-name":"qubership-apihub-json-crawl","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided file describes a utility package for crawling/cloning JSON objects in a tree-like structure, which is a development tool rather than a cloud-native solution. The CNCF landscape primarily focuses on cloud-native technologies like container orchestration, service meshes, monitoring, etc. This package does not fit into any specific CNCF category as it is a general-purpose library for JSON manipulation. Therefore, no direct alternatives from the CNCF landscape are applicable."},{"qubership-name":"qubership-cql-driver","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided base64 content decodes to '# qubershiq-cql-driver', which is insufficient to determine the exact nature of the solution or its alignment with any specific CNCF category. More context or a detailed description is needed to accurately categorize the solution and identify suitable alternatives from the CNCF landscape."},{"qubership-name":"gatekeeper-library","category":"App Definition and Development","subcategory":"Documentation","alternatives":["VuePress","MkDocs","Hugo"],"reasons":"The provided content describes a website built using Docusaurus 2, which is a modern static website generator primarily used for documentation. Docusaurus falls under the 'App Definition and Development' category in the CNCF landscape, specifically under the 'Documentation' subcategory, as it is a tool designed to create and maintain documentation websites. Alternatives like VuePress, MkDocs, and Hugo are also static site generators commonly used for documentation purposes, making them suitable alternatives within the same CNCF category."},{"qubership-name":"qubership-core-lib-go-maas-segmentio","category":"Messaging and Eventing","subcategory":"Publish & Subscribe","alternatives":["Apache Kafka","NATS","RabbitMQ","Pulsar"],"reasons":"The provided solution is a library that facilitates interaction with Kafka (specifically Kafka-go) for message production and consumption based on topic information received from Maas. It provides methods to create Kafka writers and readers, which are core functionalities in the messaging and eventing domain, specifically under the publish & subscribe model. The library abstracts the underlying Kafka communication details, making it easier to integrate Kafka into applications. Given its focus on Kafka, it naturally fits into the 'Messaging and Eventing' category with 'Publish & Subscribe' as the subcategory. Alternatives like Apache Kafka (the native solution), NATS, RabbitMQ, and Pulsar are also part of the CNCF landscape and serve similar purposes."},{"qubership-name":"qubership-docker-opensearch","category":"Security and Compliance","subcategory":"Policy Management","alternatives":["Open Policy Agent (OPA)","Kyverno","Falco"],"reasons":"The provided file describes a security filtering plugin for OpenSearch that manages access control and policy enforcement for Index State Management (ISM) operations. This functionality aligns with the 'Security and Compliance' category in the CNCF landscape, specifically under 'Policy Management'. The plugin checks user permissions and enforces policies for various ISM actions, which is similar to what solutions like Open Policy Agent (OPA), Kyverno, and Falco offer in the CNCF ecosystem. These alternatives also provide policy enforcement and security filtering capabilities, making them suitable comparisons."},{"qubership-name":"qubership-graylog-plugins-init","category":"Observability and Analysis","subcategory":"Logging","alternatives":["Fluentd","Fluent Bit","Logstash"],"reasons":"The provided file describes an init container for customizing Graylog with predefined plugins. Graylog is a centralized logging solution that falls under the 'Observability and Analysis' category in the CNCF landscape, specifically under the 'Logging' subcategory. The described solution involves downloading and managing plugins for Graylog, which is similar to how other logging solutions like Fluentd, Fluent Bit, and Logstash operate. These alternatives are also part of the CNCF landscape and serve similar purposes in log management and processing."},{"qubership-name":"qubership-apihub","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Helm","Kustomize","Tanka"],"reasons":"The provided file describes a Helm chart for deploying Qubership APIHUB to a Kubernetes cluster. Helm is a package manager for Kubernetes, which falls under the 'App Definition and Development' category in the CNCF landscape, specifically under 'Application Definition & Image Build'. Alternatives like Kustomize and Tanka are also tools for managing Kubernetes applications, making them relevant alternatives. The mention of Helm charts and Kubernetes deployment strongly suggests this categorization."},{"qubership-name":"qubership-zookeeper-backup-daemon","category":"n/a","subcategory":"n/a","alternatives":["n/a"],"reasons":"The provided file describes a performance test involving ZooKeeper Backup Daemon and its impact on ZooKeeper performance. However, it does not provide enough information about the solution's architecture, purpose, or functionality to categorize it within the CNCF landscape. The CNCF categories typically include areas like 'Orchestration', 'Service Mesh', 'Monitoring', 'Storage', etc., but the content does not align clearly with any of these. More context about the solution's role in cloud-native ecosystems would be needed for accurate categorization."},{"qubership-name":"qubership-apihub-sniffer-agent","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided content describes a folder containing public data types and constants for interacting with external systems and users, but it does not provide enough information to determine a specific category or subcategory within the CNCF landscape. The files mentioned (e.g., CallResult.go, CaptureRequest.go, Constants.go) suggest a focus on data types and constants, but without more context about the framework or application they belong to, it's impossible to accurately classify them. Therefore, all fields are marked as 'n/a'."},{"qubership-name":"cla-storage","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided base64 content 'IyBjbGEtc3RvcmFnZQ==' decodes to '# cla-storage', which is insufficient to determine the category or subcategory within the CNCF landscape. More context or a detailed description of the solution is needed to make an accurate classification and suggest alternatives."},{"qubership-name":"qubership-maas-client","category":"Messaging and Eventing","subcategory":"Message Brokers","alternatives":["RabbitMQ","Apache Kafka","NATS","Apache Pulsar"],"reasons":"The provided file describes a module that works with RabbitMQ's blue/green deployment mode, focusing on dynamic queue creation and management during microservice runtime. This fits squarely within the 'Messaging and Eventing' category of the CNCF landscape, specifically under 'Message Brokers'. RabbitMQ is a well-known message broker, and alternatives like Apache Kafka, NATS, and Apache Pulsar are also prominent in this space, offering similar capabilities for dynamic message queuing and event-driven architectures."},{"qubership-name":"qubership-core-microservice-framework","category":"Microservices","subcategory":"Microservice Frameworks","alternatives":["Spring Cloud","Micronaut","Quarkus"],"reasons":"The provided file describes a microservice framework intended for use in a blocking mode with WebClient, which suggests it is a tool for building microservices. The mention of Spring context initialization and MicroserviceApplicationBuilder further indicates it is a framework for microservices development. Alternatives like Spring Cloud, Micronaut, and Quarkus are also microservice frameworks within the CNCF landscape that provide similar functionality for building and managing microservices."},{"qubership-name":"qubership-pipelines-modules-ops","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Tekton","Argo Workflows","Jenkins X"],"reasons":"The file name 'qubership-pipelines-modules-ops' suggests that the solution is related to pipelines and modules, likely for CI/CD or workflow automation. This aligns with the 'App Definition and Development' category in the CNCF landscape, specifically under 'Application Definition & Image Build'. Alternatives like Tekton, Argo Workflows, and Jenkins X are also pipeline solutions within the CNCF landscape that fit this category."},{"qubership-name":"qubership-graphite-remote-adapter","category":"Monitoring","subcategory":"n/a","alternatives":["Prometheus","Grafana","Thanos"],"reasons":"The provided file describes a package named 'ui' that contains static files and templates used in the web UI, which are compiled into the Prometheus Remote Adapter binary using the go-bindata tool. This suggests that the solution is related to monitoring, specifically in the context of Prometheus, which is a well-known project under the CNCF. The alternatives listed are other monitoring solutions within the CNCF landscape that are commonly used alongside or as alternatives to Prometheus."},{"qubership-name":"qubership-core-ingress-gateway","category":"Networking","subcategory":"API Gateway","alternatives":["Kong","Traefik","Contour","Gloo"],"reasons":"The provided file describes an Ingress Gateway based on the Envoy proxy, which is a common component in API Gateway solutions. The description mentions dynamic configuration loading from a control plane and different types of gateways (public, private, internal, egress), which aligns with the functionality of API Gateways in the CNCF landscape. The alternatives listed are other well-known API Gateway solutions within the CNCF ecosystem that provide similar features."},{"qubership-name":"k8s-conformance","category":"App Definition and Development","subcategory":"Container Runtime","alternatives":["containerd","CRI-O","Kata Containers"],"reasons":"The provided file describes a cloud-native platform based on Kubernetes, focusing on container runtime and orchestration. The commands and procedures mentioned are related to initializing and joining Kubernetes nodes, running conformance tests, and managing containerized applications. This aligns with the 'Container Runtime' subcategory under 'App Definition and Development' in the CNCF landscape. Alternatives like containerd, CRI-O, and Kata Containers are other container runtimes that are part of the CNCF ecosystem and serve similar purposes."},{"qubership-name":"robot-shop","category":"App Definition and Development","subcategory":"Application Testing","alternatives":["Locust","JMeter","Gatling","k6"],"reasons":"The provided file describes a load generation tool that is used to test applications by simulating multiple clients and varying load over time. This fits well within the 'Application Testing' subcategory of the 'App Definition and Development' category in the CNCF landscape. Alternatives like Locust, JMeter, Gatling, and k6 are also load testing tools that are commonly used in the cloud-native ecosystem for similar purposes."},{"qubership-name":"qubership-core-blue-green-state-monitor-quarkus","category":"App Definition and Development","subcategory":"Microservice Tools","alternatives":["Spring Cloud","Micronaut","Quarkus"],"reasons":"The provided file describes a library that integrates with Quarkus to provide configuration and state management for microservices, specifically mentioning features like BlueGreenStatePublisher and MicroserviceMutexService. This aligns with the 'App Definition and Development' category in the CNCF landscape, under 'Microservice Tools'. Alternatives like Spring Cloud, Micronaut, and Quarkus are listed as they are also frameworks that provide similar microservice tooling and integration capabilities."},{"qubership-name":"qubership-cloud-passport-cli","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Kong","Envoy","Traefik"],"reasons":"The provided file describes an open-source Python library used by QuberShip Cloud pass-port module, which appears to be a client library for interacting with a cloud service. Given that it's a client library, it's likely related to API interaction or gateway functionality. The alternatives listed (Kong, Envoy, Traefik) are all CNCF-listed projects that provide API gateway functionality, which seems to be the closest match to the described solution. However, the description is somewhat limited, so there's a degree of uncertainty in this categorization."},{"qubership-name":"qubership-landscape-config-processor","category":"App Definition and Development","subcategory":"Configuration","alternatives":["kustomize","helm","jsonnet"],"reasons":"The solution described is a tool for managing and merging YAML configuration files, specifically for the CNCF Landscape application. This falls under the 'Configuration' subcategory of 'App Definition and Development' in the CNCF landscape. Alternatives like 'kustomize', 'helm', and 'jsonnet' are also configuration management tools that handle YAML files and are part of the CNCF ecosystem. The described tool's functionality is similar to these alternatives, as it focuses on merging and managing YAML configurations for a cloud-native application."},{"qubership-name":"qubership-docker-integration-tests","category":"Testing","subcategory":"n/a","alternatives":["Sonobuoy","Testkube"],"reasons":"The provided description mentions a 'Robot Framework library' that provides basic keywords to write RF integration tests for Kubernetes-based applications. This suggests the solution is focused on testing within a Kubernetes environment. The CNCF landscape includes testing tools like Sonobuoy (for conformance testing) and Testkube (for running tests in Kubernetes), which are similar in purpose. The category 'Testing' is chosen as it best fits the described functionality of the solution."},{"qubership-name":"qubership-apihub-jest-chrome-in-docker-environment","category":"Testing","subcategory":"Browser Testing","alternatives":["Selenium","Cypress","TestCafe","Playwright"],"reasons":"The described solution is focused on running Chrome browser in identical environments across different machines, including CI and local PCs, for screenshot tests. It leverages Docker to ensure consistency and simplifies interactions with Docker and Chrome. This aligns with the 'Testing' category in the CNCF landscape, specifically under 'Browser Testing' subcategory. Alternatives like Selenium, Cypress, TestCafe, and Playwright are also tools designed for browser automation and testing, making them suitable comparisons."},{"qubership-name":"qubership-apihub-ui-tests","category":"App Definition and Development","subcategory":"Testing","alternatives":["Selenium","Cypress","TestCafe"],"reasons":"The provided file describes a project used for creating and running auto-tests, primarily for UI E2E (End-to-End) testing, using the Playwright framework. This fits well under the 'Testing' subcategory of 'App Definition and Development' in the CNCF landscape. Alternatives like Selenium, Cypress, and TestCafe are also popular tools in this space for UI automation testing."},{"qubership-name":"qubership-apihub-test-service","category":"API Gateway","subcategory":"n/a","alternatives":["Kong","Traefik","Envoy"],"reasons":"The description mentions a microservice that exposes various API specifications (REST, GraphQL, Async, etc.) on various endpoints, which aligns with the functionality of an API Gateway. The solution is used for testing needs in the context of Quibership-APIHUB, suggesting it acts as a central point for API management. Alternatives like Kong, Traefik, and Envoy are listed as they are prominent API Gateway solutions in the CNCF landscape."},{"qubership-name":"qubership-maas-declarative-client-quarkus","category":"ERROR CATEGORY","subcategory":"ERROR SUBCATEGORY","alternatives":[]},{"qubership-name":"qubership-core-lib-go-dbaas-postgres-client","category":"Database","subcategory":"SQL Database","alternatives":["Vitess","TiDB","CockroachDB"],"reasons":"The provided file describes a PostgreSQL client library that facilitates interaction with PostgreSQL databases, particularly in a multi-tenant environment. It supports both service and tenant databases, and it is built on top of the 'uptrace/bun' ORM library and 'pgx' driver. This aligns well with the CNCF's Database category, specifically SQL Database subcategory, as it provides tools for managing and interacting with SQL databases in a cloud-native environment. Alternatives like Vitess, TiDB, and CockroachDB are also SQL databases that offer similar functionalities and are part of the CNCF landscape."},{"qubership-name":"qubership-apihub-vscode","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Kong","Apigee","Tyk"],"reasons":"The solution described is an extension for Quberchip that allows publishing API specifications and related documents to APIHUB. This functionality aligns with the 'API Gateway' subcategory under 'App Definition and Development' in the CNCF landscape. The solution focuses on API documentation and publishing, which is a core feature of API gateways. Alternatives like Kong, Apigee, and Tyk are listed as they provide similar API management and documentation features."},{"qubership-name":"qubership-apihub-graphapi","category":"API Gateway","subcategory":"GraphQL Tools","alternatives":["Apollo Server","GraphQL Mesh","Hasura"],"reasons":"The provided file describes a package that provides utilities to convert GraphQL schema into GraphAPI document and back, which is a tool for working with GraphQL APIs. This aligns with the CNCF category of API Gateway, specifically under GraphQL Tools, as it facilitates the management and transformation of GraphQL schemas. Alternatives like Apollo Server, GraphQL Mesh, and Hasura are also part of the CNCF landscape and provide similar functionalities for GraphQL schema management and API gateway services."},{"qubership-name":"qubership-landscape-config","category":"App Definition and Development","subcategory":"Configuration","alternatives":["Kustomize","Helm","Jsonnet"],"reasons":"The provided file describes a project that extends/overrides the base configuration of the CNCF landscape. It involves managing configuration files in YAML format, merging them into a base configuration, and handling additional items like logos and icons. This fits well under the 'Configuration' subcategory of 'App Definition and Development' in the CNCF landscape. Alternatives like Kustomize, Helm, and Jsonnet are also configuration management tools that help in managing and deploying applications in a cloud-native environment."},{"qubership-name":"qubership-core-lib-go-fiber-server-utils","category":"App Definition and Development","subcategory":"Microservice Tools","alternatives":["Go Micro","Kratos","Go Kit"],"reasons":"The provided file describes a Go library (fiber-server-utils) that enhances the Fiber web framework with cloud-native capabilities such as health checks, metrics, tracing, and logging. This fits well under the 'App Definition and Development' category in the CNCF landscape, specifically under 'Microservice Tools', as it provides utilities for building and managing microservices. Alternatives like Go Micro, Kratos, and Go Kit are also listed under similar categories in the CNCF landscape as they provide frameworks and tools for building microservices in Go."},{"qubership-name":"qubership-apihub-api-visitor","category":"API Gateway","subcategory":"API Tools","alternatives":["Apigee","Kong","Tyk"],"reasons":"The provided file describes a utility for type-safe OpenAPI specification crawling, which is related to API tools. The mention of 'schema object' and 'self loops' suggests it's used for analyzing and validating API specifications, a common feature in API Gateway and API tooling solutions. The alternatives listed are other CNCF projects or popular tools in the API Gateway space that provide similar functionality for API specification handling and validation."},{"qubership-name":"qubership-core-maas-agent","category":"Security","subcategory":"Identity and Access Management","alternatives":["Keycloak","SPIFFE","Dex"],"reasons":"The `maas-agent` described in the file appears to be a proxy for transforming internal M2M security with local IdP to credentials compatible with a global MaaS service. This functionality aligns with Identity and Access Management (IAM) solutions in the CNCF landscape, which handle authentication, authorization, and credential management. Alternatives like Keycloak, SPIFFE, and Dex are also focused on secure identity management and credential handling in cloud-native environments. The description emphasizes security and credential transformation, which is why the 'Security' category and 'Identity and Access Management' subcategory were chosen."},{"qubership-name":"qubership-graylog-archiving-plugin","category":"Storage","subcategory":"Backup & Restore","alternatives":["Velero","Stash","Kasten K10"],"reasons":"The Graylog Archiving Plugin is designed for archiving Elasticsearch indices, which falls under the category of backup and restore solutions in the CNCF landscape. It provides functionality to create, manage, and restore archives of Elasticsearch indices, similar to other backup and restore tools like Velero, Stash, and Kasten K10. The plugin supports both file-system and S3 storage for archives, making it a versatile solution for data backup in cloud-native environments."},{"qubership-name":"qubership-maas-declarative-client-spring","category":"ERROR CATEGORY","subcategory":"ERROR SUBCATEGORY","alternatives":[]},{"qubership-name":"qubership-av-scan-service","category":"Security","subcategory":"Scanning & Vulnerability","alternatives":["Clair","Trivy","Anchore Engine"],"reasons":"The provided file describes an antivirus scan service that scans files for viruses using an HTTP API. This functionality aligns with the 'Scanning & Vulnerability' subcategory under the 'Security' category in the CNCF landscape. Similar projects in this space include Clair, Trivy, and Anchore Engine, which are also focused on scanning for vulnerabilities and security threats."},{"qubership-name":"qubership-logging-operator","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided content does not contain enough information to determine the CNCF category or subcategory. The description mentions Lua scripts for parsing key-value pairs and updating levels, but it does not provide details about the broader solution, framework, or application these scripts are part of. Without additional context about the purpose, architecture, or use case of the overall solution, it is impossible to accurately categorize it within the CNCF landscape or suggest alternatives."},{"qubership-name":"qubership-core-lib-go-maas-bg-segmentio","category":"Messaging and Eventing","subcategory":"Message Brokers","alternatives":["Apache Kafka","NATS","RabbitMQ"],"reasons":"The provided file describes a library that adapts Blue Green Consumer for a Kafka client, specifically for the Segmentio Kafka Go client. This indicates that the solution is related to messaging systems, particularly Kafka, which is a prominent message broker. The CNCF landscape includes several message brokers, and the described solution fits best within the 'Messaging and Eventing' category, specifically under 'Message Brokers'. Alternatives like Apache Kafka, NATS, and RabbitMQ are also part of this category and are commonly used for similar purposes."},{"qubership-name":"qubership-apihub-apispec-view","category":"App Definition and Development","subcategory":"Documentation","alternatives":["Docusaurus","VuePress","Docsify"],"reasons":"The provided file describes a collection of UI components for displaying beautiful developer documentation from any OpenAPI document. This aligns with the 'App Definition and Development' category in the CNCF landscape, specifically under the 'Documentation' subcategory, as it focuses on tools that help developers create and maintain documentation. Alternatives like Docusaurus, VuePress, and Docsify are also documentation tools that help developers create and maintain documentation sites, making them suitable alternatives."},{"qubership-name":"qubership-fluent-pipeline-tests","category":"Observability and Analysis","subcategory":"Logging","alternatives":["Fluentd","Fluent Bit","Logstash","Vector"],"reasons":"The provided content discusses a testing pipeline for Fluentd and Fluent Bit, which are well-known logging agents in the CNCF landscape. The mention of 'fluentd', 'fluentbit', and 'fluentbit-ha' suggests that the solution is related to log collection and processing. Fluentd and Fluent Bit are both part of the CNCF logging subcategory, and alternatives like Logstash and Vector also fit into this category as they serve similar purposes in log management and processing."},{"qubership-name":"qubership-grafana-plugins-init","category":"Observability and Analysis","subcategory":"Monitoring","alternatives":["Prometheus","Thanos","Cortex"],"reasons":"The provided file describes a container for Grafana customization with predefined plugins. Grafana is a popular open-source platform for monitoring and observability, which aligns with the 'Observability and Analysis' category in the CNCF landscape. Specifically, it falls under 'Monitoring' as it is used to visualize and analyze metrics. Alternatives like Prometheus, Thanos, and Cortex are also part of the CNCF landscape and serve similar purposes in monitoring and observability."},{"qubership-name":"qubership-apihub-api-data-model","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Kong","Apigee","Tyk"],"reasons":"The description mentions converting JSON schema-based documents into a structured and simplified data tree, which is a common feature of API gateways that transform and manage API data. The modified version of 'udamir/api-model-tree' suggests it's related to API data modeling. The alternatives listed are popular API gateways in the CNCF landscape that provide similar functionality."},{"qubership-name":"qubership-apihub-traffic-analyzer","category":"n/a","subcategory":"n/a","alternatives":["n/a"],"reasons":"The provided file describes utility code for helper functions (goroutines, hashing, UUID generation) but does not provide enough context to determine a specific CNCF category. Utility code alone is too generic to classify within the CNCF landscape, which focuses on cloud-native tools, platforms, and frameworks. No cloud-native or distributed system components are mentioned."},{"qubership-name":"qubership-core-lib-go","category":"Observability and Analysis","subcategory":"Logging","alternatives":["Fluentd","Loki","OpenTelemetry"],"reasons":"The provided file describes a logging package that supports different log levels, customizable log formats, and runtime log level changes. These features are characteristic of logging solutions within the Observability and Analysis category of the CNCF landscape. Specifically, it fits under the Logging subcategory, which includes tools designed to collect, store, and analyze log data. Alternatives like Fluentd, Loki, and OpenTelemetry are mentioned because they are prominent CNCF projects that also provide logging capabilities, with varying focuses such as log aggregation (Fluentd), log storage and querying (Loki), and comprehensive observability (OpenTelemetry)."},{"qubership-name":"qubership-core-lib-go-maas-core","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Dapr","Knative","Helm"],"reasons":"The provided file describes a library (core-lib-go-maas-core) that provides methods to build MAAS (Metal as a Service) clients with default parameters like logger, namespace, MAAS agent URL, and auth supplier. This fits into the 'App Definition and Development' category as it is a development tool for building applications. The subcategory 'Application Definition & Image Build' is chosen because the library seems to assist in defining and building application components, particularly for MAAS clients. Alternatives like Dapr, Knative, and Helm are listed as they also provide tools and frameworks for building and defining applications in a cloud-native environment. However, the exact functionality of the library is not fully detailed, so the categorization is based on the available information."},{"qubership-name":"qubership-env-checker","category":"App Definition and Development","subcategory":"Testing","alternatives":["Sonobuoy","kube-bench","Polaris"],"reasons":"The described solution, 'qubership-env-checker', is an independent microservice designed to validate Kubernetes or OpenShift environments. It performs checks on infrastructure, Kubernetes entities, labels, annotations, variables, and generates detailed reports. This functionality aligns with the 'Testing' subcategory under 'App Definition and Development' in the CNCF landscape, as it focuses on validating and ensuring the correctness of cloud-native environments. Alternatives like Sonobuoy, kube-bench, and Polaris are also tools in the CNCF landscape that perform similar validation and compliance checks for Kubernetes environments."},{"qubership-name":"qubership-core-lib-go-dbaas-arangodb-client","category":"Database","subcategory":"NewSQL","alternatives":["TiDB","CockroachDB","YugabyteDB"],"reasons":"The provided file describes a Go client library for interacting with ArangoDB databases, specifically designed to work with multi-tenancy and service databases. ArangoDB is a multi-model database that supports key-value, document, and graph data models, which falls under the NewSQL category in the CNCF landscape. The alternatives listed are also NewSQL databases that support similar multi-model capabilities and are part of the CNCF ecosystem."},{"qubership-name":"qubership-apihub-api-processor","category":"API Gateway","subcategory":"API Management","alternatives":["Kong","Envoy","Apigee","Tyk"],"reasons":"The solution described in the file focuses on unifying and normalizing API presentations, supporting OpenAPI and GraphQL specifications, and providing features like schema merging, reference resolution, and custom rules for document types. These functionalities align closely with the API Gateway and API Management categories in the CNCF landscape. The solution's emphasis on processing different API specifications, merging schemas, and supporting various API formats (like OpenAPI and GraphQL) makes it a fit for API Management tools. Alternatives like Kong, Envoy, Apigee, and Tyk are listed as they provide similar capabilities in API gateway and management, including support for OpenAPI and GraphQL, schema validation, and API unification."},{"qubership-name":"microservice-restclient","category":"App Definition and Development","subcategory":"Microservice Tools","alternatives":["gRPC","Istio","Linkerd"],"reasons":"The provided file decodes to 'microservice-restclient', which suggests it is related to microservices and REST clients. This fits well under the 'App Definition and Development' category in the CNCF landscape, specifically under 'Microservice Tools'. Alternatives like gRPC, Istio, and Linkerd are also part of the CNCF landscape and are commonly used for microservice communication and management, making them relevant alternatives."},{"qubership-name":"qubership-consul-backup-daemon","category":"Management and Governance","subcategory":"Backup and Recovery","alternatives":["Velero","Kasten K10","Stash"],"reasons":"The provided file describes a backup and recovery solution for Consul Service, which includes features like full manual backup, granular backup, and non-evictable backup options. It also provides API-based operations for backup and recovery, status checks, and backup management. This aligns well with the 'Backup and Recovery' subcategory under 'Management and Governance' in the CNCF landscape. Alternatives like Velero, Kasten K10, and Stash are also popular backup and recovery solutions in the CNCF ecosystem that offer similar functionalities for cloud-native applications."},{"qubership-name":"qubership-observability-examples","category":"Observability and Analysis","subcategory":"n/a","alternatives":["Prometheus","Grafana","Jaeger","Fluentd","OpenTelemetry"],"reasons":"The filename 'qubership-observability-examples' suggests that the content is related to observability, which is a key category in the CNCF landscape. Observability tools help in monitoring, logging, and tracing applications. Given the lack of detailed content, the best-fit category is 'Observability and Analysis'. Alternatives include well-known CNCF projects like Prometheus for monitoring, Grafana for visualization, Jaeger for tracing, Fluentd for logging, and OpenTelemetry for a unified observability framework."},{"qubership-name":"qubership-core-lib-go-dbaas-clickhouse-client","category":"Database","subcategory":"SQL Database","alternatives":["Vitess","TiDB","CockroachDB"],"reasons":"The provided file describes a Go client library for interacting with ClickHouse databases, specifically designed to work with multi-tenancy and service databases. It provides functionality for creating and managing database connections, executing queries, and handling SSL/TLS connections. Given its focus on database interaction and management, it fits best under the 'Database' category in the CNCF landscape. The 'SQL Database' subcategory is appropriate as ClickHouse is an SQL database. Alternatives like Vitess, TiDB, and CockroachDB are also SQL databases that support similar functionalities and are part of the CNCF landscape."},{"qubership-name":"qubership-kube-events-reader","category":"Observability and Analysis","subcategory":"Logging","alternatives":["Fluentd","Fluent Bit","Prometheus","Grafana"],"reasons":"The solution described is a Kubernetes events reader that collects and processes Kubernetes events, sending them to configured outputs like logs (to be processed by Fluentd/FluentBit) or metrics (to be scraped by Prometheus). This fits under the 'Observability and Analysis' category in the CNCF landscape, specifically under 'Logging' as it deals with event collection and logging. Alternatives like Fluentd and Fluent Bit are also logging solutions, while Prometheus and Grafana are more focused on metrics, which the solution also supports."},{"qubership-name":"qubership-apihub-api-diff","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Kong","Envoy","Apigee","Tyk"],"reasons":"The provided file describes a tool for generating API diffs, changelogs, and ensuring API versioning consistency, which aligns with the functionality of API gateways and management tools in the CNCF landscape. The tool supports various API specifications like OpenAPI, AsyncAPI, and JSON Schema, which are commonly handled by API gateways. The alternatives listed are popular API gateways and management tools within the CNCF ecosystem that provide similar functionalities."},{"qubership-name":"qubership-apihub-api-unifier","category":"API Infrastructure","subcategory":"API Gateway","alternatives":["Kong","Envoy","Gloo"],"reasons":"The solution described in the file is focused on unifying APIs into a normalized presentation with support for OpenAPI and GraphQL specifications. It also mentions features like schema merging, reference resolution, and support for various API specifications, which are common in API Gateway solutions. The CNCF landscape categorizes API Gateways under 'API Infrastructure', and popular alternatives in this space include Kong, Envoy, and Gloo, which also provide API unification, transformation, and routing capabilities."},{"qubership-name":"qubership-test-pipelines","category":"App Definition and Development","subcategory":"Continuous Integration & Delivery","alternatives":["Argo CD","Flux","Tekton"],"reasons":"The provided file describes a GitHub Action that verifies Kubernetes deployments, including status checks, log collection, and test validation. This functionality aligns with Continuous Integration & Delivery (CI/CD) tools in the CNCF landscape, which focus on automating and validating deployments. Alternatives like Argo CD, Flux, and Tekton are also CI/CD tools that manage and verify Kubernetes deployments, making them suitable comparisons. The category 'App Definition and Development' was chosen as it encompasses tools that assist in defining, deploying, and verifying applications in cloud-native environments."},{"qubership-name":"qubership-opensearch","category":"n/a","subcategory":"n/a","alternatives":["n/a"],"reasons":"The provided content is insufficient to determine the exact category within the CNCF landscape. It mentions the 'Robot Framework' (http://robotframework.org/), which is a generic test automation framework, but does not provide enough context about its cloud-native usage or integration. Without additional details on how it fits into cloud-native ecosystems (e.g., Kubernetes testing, CI/CD tooling, or observability), a proper classification cannot be made. Alternatives are also unclear due to the lack of context."},{"qubership-name":"qubership-integration-runtime-catalog","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Helm","Kustomize","Operator Framework"],"reasons":"The provided content describes Runtime Catalog as part of a global integration solution, which handles runtime configuration and is utilized by a microservice (Engine). This suggests it is involved in managing application configurations and deployments, aligning with the 'App Definition and Development' category. Subcategory 'Application Definition & Image Build' fits as it involves tools for defining and building applications. Alternatives like Helm, Kustomize, and Operator Framework are similar in managing application configurations and deployments in cloud-native environments."},{"qubership-name":"qubership-log-exporter","category":"Observability and Analysis","subcategory":"Logging","alternatives":["Fluentd","Logstash","Vector"],"reasons":"The described solution, 'log-exporter', is designed to evaluate Prometheus metrics based on logs retrieved from Graylog, New Relic, or Loki via API. It processes logs to generate metrics (counter, gauge, histogram) and exports them to Prometheus or VictoriaMetrics. This functionality aligns with the 'Observability and Analysis' category in the CNCF landscape, specifically under 'Logging' subcategory, as it deals with log processing and metric generation. Alternatives like Fluentd, Logstash, and Vector are also log processing tools that can transform logs into metrics and export them to various backends, making them suitable alternatives."},{"qubership-name":"KubeMarine","category":"Provisioning","subcategory":"Cluster Management","alternatives":["kops","kubespray","Rancher","Cluster API"],"reasons":"Kubemarine is described as a lightweight and powerful management tool for end-to-end Kubernetes cluster deployment and maintenance. It provides CLI commands and can be customized using a Python extension API. It supports various deployment schemes (all-in-one, mini-HA, HA, etc.) and can be used for both deployment and maintenance stages. This aligns with the 'Provisioning' category in the CNCF landscape, specifically under 'Cluster Management', as it focuses on setting up and managing Kubernetes clusters. Alternatives like kops, kubespray, Rancher, and Cluster API are also tools in the same space, providing similar functionalities for Kubernetes cluster provisioning and management."},{"qubership-name":"qubership-core-lib-go-dbaas-base-client","category":"Database","subcategory":"n/a","alternatives":["Vitess","TiDB","CockroachDB"],"reasons":"The provided file describes a database client implementation for a REST API (DbAAS) that allows acquiring raw database connections and supports different database types like Cassandra, PostgreSQL, and MongoDB. This fits within the Database category of CNCF as it deals with database connectivity and management. Alternatives like Vitess, TiDB, and CockroachDB are listed as they are also database solutions within the CNCF landscape that provide similar functionalities for managing and connecting to databases."},{"qubership-name":"qubership-network-latency-exporter","category":"Observability and Analysis","subcategory":"Monitoring","alternatives":["Prometheus","InfluxDB","OpenTelemetry"],"reasons":"The solution described is a network latency exporter that collects RTT and TTL metrics and sends them to InfluxDB or Prometheus. This fits squarely within the Observability and Analysis category of the CNCF landscape, specifically under Monitoring. It is similar to other monitoring tools like Prometheus and InfluxDB, which also collect and store metrics. OpenTelemetry is also listed as an alternative as it provides a framework for collecting metrics, traces, and logs, though it is more general-purpose compared to the described solution."},{"qubership-name":"qubership-zookeeper-monitoring","category":"Monitoring","subcategory":"Time Series Monitoring","alternatives":["Prometheus","Thanos","VictoriaMetrics"],"reasons":"The provided file describes a monitoring solution for ZooKeeper using Prometheus for metrics collection and Grafana for visualization. This fits squarely into the 'Monitoring' category of the CNCF landscape, specifically under 'Time Series Monitoring' due to its reliance on Prometheus. Alternatives like Thanos and VictoriaMetrics are also listed as they are prominent CNCF projects in the same space, offering scalable and efficient time-series monitoring capabilities."},{"qubership-name":"qubership-apihub-ui","category":"API Infrastructure","subcategory":"API Documentation","alternatives":["Swagger UI","Redoc","Stoplight"],"reasons":"The solution described, APIHUB, is focused on API documentation, design, and validation, which aligns with the 'API Infrastructure' category in the CNCF landscape. It specifically falls under the 'API Documentation' subcategory as it provides tools for managing and viewing API specifications, similar to other solutions like Swagger UI, Redoc, and Stoplight. These alternatives also offer comprehensive API documentation and design features, making them suitable comparisons."},{"qubership-name":"qubership-git-system-follower","category":"App Definition and Development","subcategory":"Package Management","alternatives":["Helm","Kustomize","Flux","Argo CD"],"reasons":"The solution described in the file is a package manager for Git providers, specifically designed to manage repository branch content and configuration. It automates installations, updates, and removals, ensuring consistency and reducing manual intervention. This aligns with the 'Package Management' subcategory under 'App Definition and Development' in the CNCF landscape. Alternatives like Helm, Kustomize, Flux, and Argo CD are also tools that manage configurations and packages in a cloud-native environment, though they may focus more on Kubernetes-specific scenarios."},{"qubership-name":"qubership-core-mongo-evolution","category":"Database","subcategory":"Database Migration and Tooling","alternatives":["Liquibase","Flyway","SchemaHero"],"reasons":"The provided file describes a library called 'spring-mongo-evolution' which is a wrapper around Java Mongo Evolution. It allows using MongoTemplate in Mongo evolution scripts, which is particularly convenient for Spring Framework users. This library is focused on database schema evolution and migration, specifically for MongoDB. It fits under the 'Database' category in the CNCF landscape, more specifically under 'Database Migration and Tooling' as it provides tools for managing database schema changes. Alternatives like Liquibase, Flyway, and SchemaHero are also tools designed for database schema migration and evolution, making them suitable alternatives."},{"qubership-name":"qubership-graylog-auth-proxy","category":"Security and Compliance","subcategory":"Authentication and Authorization","alternatives":["Dex","Keycloak","OAuth2 Proxy"],"reasons":"The solution described is a proxy that handles authentication and authorization for users accessing the Graylog server using third-party databases like LDAP or OAuth services (e.g., Keycloak). It fits under the 'Security and Compliance' category because it deals with securing access to applications via authentication mechanisms. The 'Authentication and Authorization' subcategory is appropriate as it specifically handles user authentication and role/permission mapping. Alternatives like Dex, Keycloak, and OAuth2 Proxy are listed because they provide similar functionality in managing authentication and authorization in cloud-native environments."},{"qubership-name":"qubership-apihub-build-task-consumer","category":"App Definition and Development","subcategory":"Microservices","alternatives":["Express","Fastify","Koa"],"reasons":"The provided file describes a Node.js microservice for APIHub Package versions builds. It includes installation, building, running, and testing the application, which aligns with the 'App Definition and Development' category in the CNCF landscape. The 'Microservices' subcategory is chosen because the solution is a small, focused service for a specific task. Alternatives like Express, Fastify, and Koa are listed as they are also Node.js frameworks commonly used for building microservices."},{"qubership-name":"qubership-core-control-plane","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Helm","Kustomize","Jsonnet"],"reasons":"The provided content mentions 'qubership-repo-template', which appears to be a template for creating a repository. Given the context, it seems to be related to defining or managing Kubernetes applications, possibly through templating. This aligns with the 'App Definition and Development' category in the CNCF landscape, specifically under 'Application Definition & Image Build'. Alternatives like Helm, Kustomize, and Jsonnet are also tools used for managing Kubernetes application definitions and templating."},{"qubership-name":"cassandra-exporter","category":"Monitoring","subcategory":"Metrics","alternatives":["jmx_exporter","kube-state-metrics","node_exporter"],"reasons":"The cassandra-exporter is a Java agent that exports Cassandra metrics to Prometheus, which is a common use case in the Monitoring category of the CNCF landscape. It follows Prometheus best practices for metric naming and labeling. Alternatives like jmx_exporter also export JVM and application metrics to Prometheus, while kube-state-metrics and node_exporter focus on Kubernetes and node metrics respectively. The cassandra-exporter is specifically tailored for Cassandra, making it a specialized tool in the Metrics subcategory."},{"qubership-name":"qubership-integration-engine","category":"Integration & Delivery","subcategory":"Service Integration","alternatives":["Apache Camel","Kubernetes Service Mesh (Istio, Linkerd)","Cloud Native Buildpacks"],"reasons":"The solution described in the file appears to be a part of a global integration platform, specifically handling configuration and runtime orchestration via Apache Camel logic and specifications. It is closely related to service integration and delivery, which fits under the 'Integration & Delivery' category in the CNCF landscape. The mention of Docker and microservices further supports this categorization. Alternatives like Apache Camel and Kubernetes Service Mesh (Istio, Linkerd) are listed as they are prominent tools in the CNCF landscape for service integration and orchestration. The use of Docker also suggests Cloud Native Buildpacks as an alternative for building and deploying containerized applications."},{"qubership-name":"qubership-open-telemetry-collector","category":"Observability and Analysis","subcategory":"Tracing","alternatives":["Jaeger","Zipkin","Prometheus","OpenTelemetry"],"reasons":"The provided file describes an implementation based on OpenTelemetry Collector, which is a tool for receiving, processing, and exporting telemetry data (traces, metrics, and logs). OpenTelemetry is a part of the CNCF landscape under the 'Observability and Analysis' category, specifically in the 'Tracing' subcategory. The file mentions support for various modules and exporters like Jaeger, Zipkin, and Prometheus, which are also part of the CNCF landscape and serve similar purposes. Therefore, the solution fits best in the 'Observability and Analysis' category with a focus on 'Tracing'."},{"qubership-name":"pgskipper-upgrade","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided base64 content decodes to '# pgskipper-upgrade', which is insufficient to determine the category or subcategory within the CNCF landscape. More context or description about the solution is needed to make an accurate classification."},{"qubership-name":"qubership-core-lib-go-actuator-common","category":"Observability and Analysis","subcategory":"Monitoring","alternatives":["Prometheus","OpenTelemetry","Jaeger"],"reasons":"The provided file describes a Go library that includes functionality for health checks, API versioning, configuration properties, monitoring, and tracing. The monitoring and tracing features, in particular, align well with the Observability and Analysis category in the CNCF landscape. The library supports Prometheus metrics and OpenTelemetry tracing, which are key technologies in this space. Alternatives like Prometheus, OpenTelemetry, and Jaeger are mentioned because they provide similar functionalities and are widely adopted in the CNCF ecosystem."},{"qubership-name":"pgskipper-operator","category":"Database","subcategory":"SQL Database","alternatives":["vitess","CloudNativePG","RadonDB PostgreSQL"],"reasons":"The provided file describes 'Postgres-Operator', which is a solution for running PostgreSQL as a service on Kubernetes and OpenShift. This clearly falls under the 'Database' category in the CNCF landscape, specifically under 'SQL Database' subcategory as PostgreSQL is a relational database. Alternatives like 'vitess', 'CloudNativePG', and 'RadonDB PostgreSQL' are also CNCF-listed projects that provide similar functionalities for managing PostgreSQL databases in cloud-native environments."},{"qubership-name":"qubership-consul-acl-configurator","category":"Security and Compliance","subcategory":"Identity and Access Management (IAM)","alternatives":["Hashicorp Vault","SPIFFE/SPIRE","Keycloak","Dex"],"reasons":"The provided file describes a solution that manages Consul ACL policies, roles, and rule bindings through Kubernetes custom resources. This functionality is primarily focused on access control and identity management within a cloud-native environment, which aligns with the 'Security and Compliance' category in the CNCF landscape. Specifically, it falls under 'Identity and Access Management (IAM)' as it deals with defining and enforcing access policies for services. Alternatives like Hashicorp Vault, SPIFFE/SPIRE, Keycloak, and Dex are listed because they also provide IAM capabilities, including policy management, role-based access control (RBAC), and service-to-service authentication. The solution's integration with Kubernetes and Consul further supports its classification in this category."},{"qubership-name":"qubership-integration-platform","category":"App Definition and Development","subcategory":"Package Management","alternatives":["Helm","Kustomize","Operator Framework"],"reasons":"The provided file contains a series of commands related to managing Kubernetes applications using Helm, which is a package manager for Kubernetes. Helm is used for deploying, upgrading, and managing applications on Kubernetes clusters. The file includes commands for installing, upgrading, rolling back, and uninstalling Helm charts, as well as interacting with Kubernetes resources using kubectl. Given this context, the solution best fits under the 'App Definition and Development' category and the 'Package Management' subcategory in the CNCF landscape. Alternatives like Kustomize and Operator Framework are also tools in the same space, providing similar functionalities for managing Kubernetes applications."},{"qubership-name":"qubership-apihub-class-view","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Backstage","KubeVela","OAM"],"reasons":"The provided description mentions a tool that provides a UML class diagram-like representation of entities and relations, which is typically used in application definition and development. The features like auto-layout, transitions animation, selection, tooltip, and navigate to are common in tools that help visualize and manage application components. Alternatives like Backstage, KubeVela, and OAM are also focused on application definition and development, providing similar capabilities for visualizing and managing application components."},{"qubership-name":"get-package-ids","category":"App Definition and Development","subcategory":"CI/CD","alternatives":["Tekton","Argo Workflows","Jenkins X"],"reasons":"The provided file describes a GitHub Action that finds package IDs for specific Docker images, which is a task related to CI/CD workflows. The action is defined in a YAML file, which is typical for CI/CD tools. The alternatives listed are other CI/CD tools within the CNCF landscape that also focus on automating workflows and integrating with containerized environments."},{"qubership-name":"qubership-dbaas","category":"Database","subcategory":"Database Proxy and Aggregation","alternatives":["Vitess","ProxySQL","TiDB"],"reasons":"The provided description indicates that DBaaS is an aggregator for database adapters, managing requests for administered databases and sending them to the necessary adapter. It stores information about all databases used in a cloud project, isolated by namespace, and uses a Classifier to identify databases within a cloud namespace. This functionality aligns with database proxy and aggregation solutions in the CNCF landscape, such as Vitess, ProxySQL, and TiDB, which also manage database connections, provide aggregation layers, and support multi-tenancy."},{"qubership-name":"qubership-credential-manager","category":"Security and Compliance","subcategory":"Secrets Management","alternatives":["Vault","Sealed Secrets","External Secrets"],"reasons":"The described solution, 'quberSHIP-credential-manager', is focused on managing credentials and secrets in a Kubernetes environment. It provides functionality for handling secrets changes, watching secrets, and updating credentials, which aligns with the 'Secrets Management' subcategory under 'Security and Compliance' in the CNCF landscape. Alternatives like Vault, Sealed Secrets, and External Secrets are also focused on managing secrets in cloud-native environments, making them suitable alternatives."},{"qubership-name":"qubership-hive-metastore","category":"Database","subcategory":"Data Warehouse","alternatives":["Apache Hive","Presto","Trino"],"reasons":"The solution described is focused on deploying Hive-Metastore in Kubernetes, which is a metadata storage service for Hive, a data warehouse software. Hive-Metastore is a critical component for managing metadata in data warehousing solutions. The alternatives listed (Apache Hive, Presto, Trino) are also data warehousing solutions that can interact with Hive-Metastore. The mention of Trino and Spark in the documentation further supports the categorization under Data Warehouse, as these tools are commonly used for querying and processing large datasets in a data warehouse context."},{"qubership-name":"qubership-integration-variables-management","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Helm","Kustomize","Jsonnet"],"reasons":"The provided content describes a solution for managing variables within integration flows, which is a part of application configuration and definition. The solution is mentioned to be part of a global integration platform and is installed via Docker Compose, indicating it is likely used in the context of cloud-native application development. Alternatives like Helm, Kustomize, and Jsonnet are tools within the CNCF landscape that also handle configuration management and templating for cloud-native applications. The description suggests a focus on variables management within microservices, which aligns with the 'App Definition and Development' category, specifically under 'Application Definition & Image Build' where configuration management tools are typically classified."},{"qubership-name":"pgskipper-operator-core","category":"n/a","subcategory":"n/a","alternatives":["n/a"],"reasons":"The provided base64 content decodes to '# pgskipper-operator-core', which is insufficient to determine the category or subcategory within the CNCF landscape. More context or description about the solution's functionality, purpose, and use cases is needed to make an accurate classification."},{"qubership-name":"qubership-apihub-backend","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided file describes 'ot' as a minimal operational-transformation library for collaborative editing, originally derived from a GitHub project. However, the description does not provide enough information to clearly categorize it within the CNCF landscape. CNCF primarily focuses on cloud-native technologies like container orchestration, service meshes, monitoring, and storage solutions, whereas 'ot' seems to be a library for collaborative text editing, which doesn't directly align with any CNCF category. Therefore, no suitable alternatives from the CNCF landscape could be identified."},{"qubership-name":"qubership-integration-checkstyle","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["n/a"],"reasons":"The provided content describes a configuration for an integration solution called 'qubership-integration-platform'. However, the description is too vague to definitively categorize it within the CNCF landscape. Based on the mention of 'configuration' and 'integration solution', it might fall under 'App Definition and Development' as it could relate to defining or building applications. However, without more details about the functionality or purpose of the solution, it's impossible to accurately categorize or suggest alternatives. The GitHub link provided does not offer additional context without further investigation."},{"qubership-name":"qubership-core-error-handling","category":"App Definition and Development","subcategory":"Application Framework","alternatives":["Spring Boot","Micronaut","Quarkus"],"reasons":"The provided content describes a Java-based error handling and logging library that integrates with SLF4J and Lombok. It focuses on application-level error management and logging, which aligns with the 'App Definition and Development' category in the CNCF landscape. Specifically, it fits under 'Application Framework' as it provides a structured way to handle errors and logs within applications. Alternatives like Spring Boot, Micronaut, and Quarkus are listed because they also provide comprehensive frameworks for building Java applications, including error handling and logging capabilities."},{"qubership-name":"qubership-query-exporter","category":"Observability and Analysis","subcategory":"Monitoring","alternatives":["Prometheus","Thanos","Cortex"],"reasons":"The file name 'qubership-query-exporter' suggests that this is a tool related to exporting queries, likely metrics or logs, which is a common functionality in monitoring solutions. Given the CNCF landscape, this would best fit under 'Observability and Analysis' with a subcategory of 'Monitoring'. Alternatives like Prometheus, Thanos, and Cortex are well-known CNCF projects that handle metrics collection, storage, and querying, making them suitable alternatives."},{"qubership-name":"qubership-envgene-template","category":"n/a","subcategory":"n/a","alternatives":["n/a"],"reasons":"The provided file content is a base64-encoded string 'IyBxdWJlcnNoaXAtZW52Z2VuZS10ZW1wbGF0ZQ==', which decodes to '# qubership-envgen-engine-template'. This is insufficient to determine the category or subcategory within the CNCF landscape, as it lacks descriptive details about the solution's functionality or purpose. No meaningful alternatives can be suggested without further context."},{"qubership-name":"qubership-observability-operator","category":"Observability and Analysis","subcategory":"Monitoring","alternatives":["Prometheus","Thanos","OpenTelemetry","Grafana"],"reasons":"The file name 'qubership-observability-operator' suggests that the solution is related to observability, which is a key category in the CNCF landscape. Given the focus on observability, it likely falls under the 'Observability and Analysis' category with a subcategory of 'Monitoring'. Alternatives like Prometheus, Thanos, OpenTelemetry, and Grafana are well-known CNCF projects in the observability space, which provide similar functionalities for monitoring and observability."},{"qubership-name":"pgskipper-patroni","category":"n/a","subcategory":"n/a","alternatives":[],"reasons":"The provided base64 content decodes to '# pgskipper-patroni', which appears to be a very brief and unclear description. It might refer to a combination of 'pgskipper' (possibly related to PostgreSQL) and 'Patroni' (a popular tool for managing PostgreSQL high availability). However, without more context or details about the solution's functionality, components, or purpose, it is impossible to accurately categorize it within the CNCF landscape or suggest alternatives. More information is needed to make a proper classification."},{"qubership-name":"qubership-fluentd","category":"Observability and Analysis","subcategory":"Logging","alternatives":["Fluent Bit","Logstash","Vector"],"reasons":"The provided file describes a custom FluentD image with additional plugins installed. FluentD is a widely used log collector and processor, which falls under the 'Logging' subcategory of 'Observability and Analysis' in the CNCF landscape. Alternatives like Fluent Bit (a lighter version of FluentD), Logstash, and Vector are also popular logging solutions within the CNCF ecosystem."},{"qubership-name":"qubership-docker-zookeeper","category":"Orchestration & Management","subcategory":"n/a","alternatives":["Kubernetes","Apache ZooKeeper","etcd"],"reasons":"The provided file describes a testing scenario involving ZooKeeper, which is a distributed coordination service often used in cloud-native environments for managing configurations, naming, and providing distributed synchronization. The file mentions OpenShift (a Kubernetes distribution) and ZooKeeper Pods, indicating a focus on orchestration and management of distributed systems. Alternatives like Kubernetes, Apache ZooKeeper, and etcd are listed as they serve similar purposes in the CNCF landscape for orchestration and coordination."},{"qubership-name":"qubership-core-context-propagation-quarkus","category":"App Definition and Development","subcategory":"Application Framework","alternatives":["Spring Cloud","Micronaut","Quarkus","Helidon"],"reasons":"The provided file describes a context propagation framework designed for microservices, which allows propagating values from one microservice to another. It supports various propagation methods (REST to REST, REST to Messaging, Messaging to REST, Messaging to Messaging) and includes features for working with context, such as propagating contexts to other threads, creating snapshots, and activating them later. This functionality aligns with application frameworks in the CNCF landscape, which provide tools and libraries for building cloud-native applications. Alternatives like Spring Cloud, Micronaut, Quarkus, and Helidon are listed as they offer similar context propagation and microservices support features."},{"qubership-name":"qubership-apihub-ci","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Kong","Traefik","Envoy"],"reasons":"The file name 'qubernetes-apihub-ci' suggests a Kubernetes-related tool with API capabilities, likely an API gateway or management solution. Given the limited information, it's categorized under 'App Definition and Development' with a subcategory of 'API Gateway'. Alternatives like Kong, Traefik, and Envoy are popular CNCF projects in this space."},{"qubership-name":"qubership-apihub-agent","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Kong","Traefik","Envoy","Gloo"],"reasons":"The provided file describes a Helm chart for deploying the QuberShip APIHUB Agent to a Kubernetes cluster. The solution is focused on API management and gateway functionality, which aligns with the 'App Definition and Development' category in the CNCF landscape, specifically under 'API Gateway'. Alternatives like Kong, Traefik, Envoy, and Gloo are also API gateways that provide similar functionality and are part of the CNCF landscape. The file mentions Kubernetes as a mandatory dependency, which further supports the classification under cloud-native technologies."},{"qubership-name":"qubership-core-rest-libraries","category":"App Definition and Development","subcategory":"Web Frameworks","alternatives":["Spring Cloud Gateway","Envoy","Linkerd"],"reasons":"The provided file describes a web client module that facilitates secure requests, automatically inserting JWT tokens, and integrates with Spring Framework. It is primarily a client-side component for making HTTP requests, which aligns with the 'App Definition and Development' category in the CNCF landscape. The 'Web Frameworks' subcategory is chosen because the solution is a framework for building web clients. Alternatives like Spring Cloud Gateway, Envoy, and Linkerd are listed as they provide similar functionalities for handling HTTP requests and API gateways in cloud-native environments."},{"qubership-name":"qubership-backup-daemon","category":"Storage","subcategory":"Backup & Restore","alternatives":["Velero","Kasten K10","Stash"],"reasons":"The solution described in the file is primarily focused on backup and restore operations for databases like MongoDB and PostgreSQL. It provides a REST API for scheduling and managing backups, supports S3 storage, and includes features like eviction policies, custom variables, and granular backup options. These characteristics align well with the 'Backup & Restore' subcategory under 'Storage' in the CNCF landscape. Alternatives like Velero, Kasten K10, and Stash are also backup solutions that fit similar use cases within the CNCF ecosystem."},{"qubership-name":"qubership-zookeeper","category":"n/a","subcategory":"n/a","alternatives":["n/a"],"reasons":"The provided content is insufficient to determine the CNCF category or subcategory. It mentions using integration tests based on the Robot Framework, but this does not clearly align with any specific CNCF category. The Robot Framework itself is a generic test automation framework and is not specifically tied to cloud-native technologies. More context about the solution's purpose, architecture, or deployment environment would be needed to make a proper classification."},{"qubership-name":"qubership-core-lib-go-stomp-websocket","category":"Networking","subcategory":"Messaging","alternatives":["NATS","RabbitMQ","Apache Kafka"],"reasons":"The provided content describes a Go library for STOMP (Simple Text Oriented Messaging Protocol) over WebSocket, which is primarily used for messaging. This fits well under the 'Networking' category in the CNCF landscape, specifically under the 'Messaging' subcategory. Alternatives like NATS, RabbitMQ, and Apache Kafka are also messaging solutions within the CNCF landscape that provide similar functionality."},{"qubership-name":"qubership-integration-ui","category":"n/a","subcategory":"n/a","alternatives":["n/a"],"reasons":"The provided base64 content decodes to 'qubership-integration-ui', which is insufficient to determine the exact category or subcategory within the CNCF landscape. More context or a detailed description of the solution's functionality, architecture, and use cases is needed to accurately classify it and identify suitable alternatives."},{"qubership-name":"qubership-core-restclient","category":"App Definition and Development","subcategory":"Microservices","alternatives":["Spring Cloud","Micronaut","Quarkus"],"reasons":"The provided file describes a microservice implementation based on a REST client (resttemplate or webclient), which falls under the 'App Definition and Development' category in the CNCF landscape. The 'Microservices' subcategory is chosen because the solution is explicitly mentioned as a microservice implementation. Alternatives like Spring Cloud, Micronaut, and Quarkus are listed as they are popular frameworks for building microservices in the Java ecosystem, similar to the described solution."},{"qubership-name":"qubership-version-exporter","category":"Observability and Analysis","subcategory":"Monitoring","alternatives":["Prometheus Operator","Thanos","VictoriaMetrics"],"reasons":"The solution described, 'qubership-version-exporter', is a tool that collects version information from various sources (Postgres, HTTP, ConfigMaps, and Secrets in Kubernetes) and exports them as Prometheus metrics. This fits squarely within the 'Observability and Analysis' category of the CNCF landscape, specifically under 'Monitoring', as it deals with collecting and exposing metrics for monitoring purposes. Alternatives like Prometheus Operator, Thanos, and VictoriaMetrics are also focused on monitoring and metrics collection, making them comparable solutions."},{"qubership-name":"qubership-apihub-protobufjs-research","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Kong","Envoy","Linkerd"],"reasons":"The provided file discusses the use of JSON descriptors for processing proto files in an APIHUB context, which suggests a focus on API management and development. The Cloud Native Computing Foundation (CNCF) landscape categorizes API gateways under 'App Definition and Development'. The alternatives listed (Kong, Envoy, Linkerd) are well-known API gateways and service mesh solutions within the CNCF landscape that handle API management and development tasks similar to what is described in the file. The file's emphasis on proto file processing and conversion aligns with the capabilities of these tools."},{"qubership-name":"qubership-workflow-hub","category":"App Definition and Development","subcategory":"CI/CD","alternatives":["Argo Workflows","Tekton","Jenkins X"],"reasons":"The provided file describes a set of workflows and actions that automate various tasks such as building, testing, and deploying applications, managing releases, and handling pull requests. These functionalities align with CI/CD (Continuous Integration and Continuous Deployment) tools, which are part of the 'App Definition and Development' category in the CNCF landscape. The alternatives listed (Argo Workflows, Tekton, Jenkins X) are also CI/CD tools that provide similar automation capabilities for cloud-native applications."},{"qubership-name":"qubership-core-lib-go-error-handling","category":"App Definition and Development","subcategory":"Error Handling and Logging","alternatives":["Sentry","OpenTelemetry","Fluentd","Elasticsearch","Prometheus"],"reasons":"The provided file describes a Go library for handling exceptions with error codes, which includes features like unique error IDs, error codes in a specific format, error wrapping, stack trace preservation, and integration with logging and HTTP servers (like fiber). This fits well within the 'App Definition and Development' category of the CNCF landscape, specifically under 'Error Handling and Logging' as it provides tools for managing and logging errors in cloud-native applications. Alternatives like Sentry, OpenTelemetry, Fluentd, Elasticsearch, and Prometheus are also focused on monitoring, logging, and error handling in cloud-native environments."},{"qubership-name":"qubership-core-springboot-starter","category":"App Definition and Development","subcategory":"Microservices Framework","alternatives":["Spring Cloud","Micronaut","Helidon"],"reasons":"The provided file describes a Spring Boot starter parent wrapper that brings essential cloud-core libraries and is used for quickly creating microservices using a microservice-framework client. This aligns with the 'App Definition and Development' category in the CNCF landscape, specifically under 'Microservices Framework'. Alternatives like Spring Cloud, Micronaut, and Helidon are also microservice frameworks that provide similar functionality for building cloud-native applications."},{"qubership-name":"pg_hint_plan","category":"Database","subcategory":"Query Optimization","alternatives":["Vitess","TiDB","CockroachDB"],"reasons":"The provided file describes 'pg_hint_plan', a PostgreSQL extension that allows tweaking execution plans using hints in SQL comments. This fits under the 'Database' category in the CNCF landscape, specifically under 'Query Optimization'. Alternatives like Vitess, TiDB, and CockroachDB also offer advanced query optimization features and are part of the CNCF landscape."},{"qubership-name":"qubership-inventory-tool-core","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Helm","Kustomize","Operator Framework"],"reasons":"The provided base64 content decodes to '# Qubership inventory-tool-core library', which suggests it might be a tool or library related to Kubernetes (given the mention of 'Qubership', possibly a play on 'Kubernetes'). The description is minimal, but it hints at an inventory tool, which could be related to managing or defining applications or resources within a Kubernetes environment. The category 'App Definition and Development' fits as it involves tools that help define, build, and manage applications in cloud-native environments. Subcategory 'Application Definition & Image Build' is chosen as it includes tools for defining applications and their components. Alternatives like Helm, Kustomize, and Operator Framework are listed as they are popular CNCF tools for managing Kubernetes applications and resources."},{"qubership-name":"qubership-core-base-images","category":"App Definition and Development","subcategory":"Container Images","alternatives":["Distroless","Alpine Linux","Red Hat Universal Base Image (UBI)"],"reasons":"The provided file describes a set of secure and feature-rich Alpine Linux-based container images designed for containerized applications. These images include pre-configured security settings, certificate management, user management, and initialization script support. The focus on minimalism, security, and flexibility aligns well with the 'Container Images' subcategory under 'App Definition and Development' in the CNCF landscape. Alternatives like Distroless, Alpine Linux, and Red Hat UBI are also minimal, secure base images commonly used in cloud-native environments."},{"qubership-name":"qubership-core-process-orchestrator","category":"App Definition and Development","subcategory":"Workflow and Orchestration","alternatives":["Argo Workflows","Tekton","Cadence"],"reasons":"The provided description outlines a Java-based process orchestration framework that handles task scheduling, execution management, and process flow control. This aligns with the 'Workflow and Orchestration' subcategory under 'App Definition and Development' in the CNCF landscape. Similar solutions in this space include Argo Workflows, Tekton, and Cadence, which also provide workflow and orchestration capabilities for managing complex task dependencies, state management, and error handling."},{"qubership-name":"qubership-monitoring-operator","category":"Monitoring","subcategory":"n/a","alternatives":["Prometheus","Grafana","Alertmanager","Thanos","VictoriaMetrics"],"reasons":"The provided file describes a monitoring solution that includes components like Grafana, Prometheus, Alertmanager, and VictoriaMetrics. These components are used for monitoring and alerting in a cloud-native environment. The file also mentions various exporters and adapters, which are typical in monitoring setups. The CNCF landscape categorizes these components under 'Monitoring'. Alternatives like Prometheus, Grafana, Alertmanager, Thanos, and VictoriaMetrics are also part of the CNCF landscape and serve similar purposes."},{"qubership-name":"qubership-dbaas-client","category":"Database","subcategory":"Database Clients and Libraries","alternatives":["HikariCP","Agroal","Vitess"],"reasons":"The provided file describes a Java DBaaS (Database as a Service) client library that provides utility methods for tests, specifically for working with a database pool and cache. This fits well under the 'Database' category in the CNCF landscape, specifically under 'Database Clients and Libraries'. Alternatives like HikariCP, Agroal, and Vitess are also database connection pooling and management tools that are part of the CNCF ecosystem."},{"qubership-name":"qubership-core-microservice-dependencies","category":"App Definition and Development","subcategory":"Microservice Frameworks","alternatives":["Spring Cloud","Micronaut","Quarkus"],"reasons":"The provided file describes `cloud-core-java-bom` as a BOM (Bill of Materials) that aggregates cloud-core libraries, excluding the `microservice-framework` library. This suggests it is related to dependency management and microservice development in Java, which aligns with the 'App Definition and Development' category and 'Microservice Frameworks' subcategory in the CNCF landscape. Alternatives like Spring Cloud, Micronaut, and Quarkus are also Java-based frameworks commonly used for building microservices and managing dependencies in cloud-native applications."},{"qubership-name":"qubership-apihub-rest-playground","category":"App Definition and Development","subcategory":"API Gateway","alternatives":["Kong","Traefik","Envoy"],"reasons":"The provided base64 content mentions 'qubership-apihub-rest-playground' and a fork of 'elements' from stoplightio, which is related to API development and tooling. This suggests the solution is likely an API gateway or API development framework. The CNCF landscape categorizes API gateways under 'App Definition and Development'. Alternatives like Kong, Traefik, and Envoy are well-known API gateways in the CNCF landscape that fit this category."},{"qubership-name":"qubership-pipelines-common-python-library","category":"App Definition and Development","subcategory":"Continuous Integration & Delivery","alternatives":["Tekton","Argo Workflows","Jenkins X"],"reasons":"The provided file describes 'Quubership Pipelines Common Library', which is a Python library providing clients and wrappers for common devops services like Jenkins, MinIO, and GitLab Pipelines. This suggests it is used in the context of CI/CD workflows. The CNCF category 'App Definition and Development' with subcategory 'Continuous Integration & Delivery' fits best, as the library is designed to facilitate CI/CD processes. Alternatives like Tekton, Argo Workflows, and Jenkins X are also CI/CD tools within the CNCF landscape that serve similar purposes."},{"qubership-name":"qubership-repo-template","category":"App Definition and Development","subcategory":"Application Definition & Image Build","alternatives":["Helm","Kustomize","Jsonnet"],"reasons":"The provided file describes a repository template named 'qubership-repo-template' which is likely used for defining and managing Kubernetes application deployments. Based on the CNCF landscape, this fits best under 'App Definition and Development' with a subcategory of 'Application Definition & Image Build' as it seems to be a tool or template for defining applications. Alternatives like Helm, Kustomize, and Jsonnet are also used for similar purposes in managing Kubernetes applications."},{"qubership-name":"pgskipper-replication-controller","category":"Database","subcategory":"Replication","alternatives":["Vitess","TiDB","YugabyteDB"],"reasons":"The provided file describes a component that offers a REST API for managing PostgreSQL publications, which is related to database replication. This functionality aligns with the 'Database' category in the CNCF landscape, specifically under the 'Replication' subcategory. Alternatives like Vitess, TiDB, and YugabyteDB are included as they also provide solutions for database replication and management within the CNCF ecosystem."},{"qubership-name":"qubership-apihub-npm-gitflow","category":"App Definition and Development","subcategory":"Package Management","alternatives":["Lerna","Yarn","Rush"],"reasons":"The provided file describes a tool that automates common gitflow processes for NPM repositories, manages git branches according to a specific branching model, and updates versions for NPM and Lerna projects. This functionality is closely related to package management and development workflow automation, which falls under the 'App Definition and Development' category in the CNCF landscape. The subcategory 'Package Management' is chosen because the tool specifically deals with NPM and Lerna projects. Alternatives like Lerna, Yarn, and Rush are listed as they are also tools that manage dependencies and workflows in JavaScript/TypeScript projects."},{"qubership-name":"qubership-colly","category":"App Definition and Development","subcategory":"Application Configuration","alternatives":["KubeVela","Crossplane","Helm"],"reasons":"The project described, 'qubership-colly', is focused on tracking the usage of clusters and environments within clusters, supporting multiple clusters, grouping namespaces into environments, and displaying custom UI parameters. It also aims to collect resources and metrics from Kubernetes and monitoring. These functionalities align with the 'App Definition and Development' category in the CNCF landscape, specifically under 'Application Configuration', as it deals with managing and configuring applications within Kubernetes environments. Alternatives like KubeVela, Crossplane, and Helm are also focused on application configuration and management within Kubernetes, making them suitable alternatives."},{"qubership-name":"qubership-core-utils","category":"Security and Compliance","subcategory":"TLS/SSL Libraries","alternatives":["Let's Encrypt","Cert-Manager","OpenSSL","BoringSSL"],"reasons":"The provided file describes a lightweight Java library focused on TLS configuration and authentication utilities, which falls under the Security and Compliance category in the CNCF landscape. The library provides features like default TLS configuration with PKIX trust manager, customizable TLS configurations via SPI, SSL context and trust/key store management, and machine-to-machine (M2M) authentication support. These functionalities are typical of security libraries that handle secure communications. Alternatives like Let's Encrypt, Cert-Manager, OpenSSL, and BoringSSL are also focused on TLS/SSL and secure communication, making them suitable alternatives."},{"qubership-name":"qubership-opensearch-dbaas-adapter","category":"Database","subcategory":"Search Indexing","alternatives":["Elasticsearch","OpenSearch","Apache Solr","Meilisearch"],"reasons":"The provided file describes a REST API for a DBaaS OpenSearch adapter, which is used to manage databases, users, and resources within an OpenSearch environment. OpenSearch is a search and analytics engine derived from Elasticsearch, and it falls under the Database category in the CNCF landscape, specifically under Search Indexing. The adapter provides functionalities like creating databases, managing users, and handling backups, which are typical for search indexing solutions. Alternatives like Elasticsearch, OpenSearch, Apache Solr, and Meilisearch are mentioned as they are similar search and indexing solutions within the CNCF ecosystem."},{"qubership-name":"qubership-core-lib-go-bg-kafka","category":"Messaging and Streaming","subcategory":"Event Brokers","alternatives":["Apache Kafka","NATS","RabbitMQ","Pulsar"],"reasons":"The provided file describes a library that abstracts the consumption of messages from Kafka in Cloud-Core Blue Green scenarios. This indicates that the solution is related to messaging and event streaming, specifically around Kafka. The CNCF landscape categorizes Kafka under 'Messaging and Streaming' with a subcategory of 'Event Brokers'. Alternatives include other popular event brokers like Apache Kafka (which is already mentioned), NATS, RabbitMQ, and Pulsar, which are also part of the CNCF landscape."},{"qubership-name":"qubership-maas-client-spring","category":"App Definition and Development","subcategory":"Message Queue","alternatives":["RabbitMQ","Apache Kafka","NATS"],"reasons":"The provided file describes a solution that involves dynamic queue bindings, versioned exchanges, and the use of RabbitMQ (evident from classes like `MaasRabbitLocalDevConfig` and annotations like `@EnableDynamicQueueBindings`). This aligns with the 'Message Queue' subcategory under 'App Definition and Development' in the CNCF landscape. Alternatives like RabbitMQ, Apache Kafka, and NATS are listed as they are prominent message queue solutions in the CNCF ecosystem."},{"qubership-name":"qubership-mistral-operator","category":"ERROR CATEGORY","subcategory":"ERROR SUBCATEGORY","alternatives":[]},{"qubership-name":"qubership-opensearch-monitoring","category":"Observability and Analysis","subcategory":"Monitoring","alternatives":["Prometheus","Thanos","VictoriaMetrics"],"reasons":"The provided file describes a service that collects metrics from an OpenSearch cluster using custom scripts. This functionality falls under the 'Observability and Analysis' category in the CNCF landscape, specifically under the 'Monitoring' subcategory. The service is similar to other monitoring solutions like Prometheus, Thanos, and VictoriaMetrics, which also collect and analyze metrics from various sources."}]}