/*C3*/SET SCHEMA PUBLIC
SET SCHEMA "PUBLIC"
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'.github','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','.github','OK','OK','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','13','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'KubeMarine','ERROR','OK','ERROR',NULL,NULL,'ERROR','KubeMarine','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>administration, devops, helm, k8sstream, kubernetes</small>','OK','Provisioning','Cluster Management','kops, kubespray, Rancher, Cluster API','Kubemarine is described as a lightweight and powerful management tool for end-to-end Kubernetes cluster deployment and maintenance. It provides CLI commands and can be customized using a Python extension API. It supports various deployment schemes (all-i')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'base-images-module-base','ERROR','OK','ERROR',NULL,NULL,'ERROR','base-images-module-base','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','13','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>base-image</small>','ERROR','n/a','n/a','INFO','The provided base64 content ''IyBiYXNlLWltYWdlcy1tb2R1bGUtYmFzZQ=='' decodes to ''# base-images-module-base'', which is insufficient to determine the category or subcategory of the solution within the CNCF landscape. No meaningful description or context was ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'cassandra-exporter','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','cassandra-exporter','ERROR','ERROR','ERROR','1.8',NULL,'ERROR','2025-04-16','OK','ERROR','10','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','Monitoring','Metrics','jmx_exporter, kube-state-metrics, node_exporter','The cassandra-exporter is a Java agent that exports Cassandra metrics to Prometheus, which is a common use case in the Monitoring category of the CNCF landscape. It follows Prometheus best practices for metric naming and labeling. Alternatives like jmx_e')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'cla-storage','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','cla-storage','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-15','OK','ERROR','14','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','ERROR','n/a','n/a','INFO','The provided base64 content ''IyBjbGEtc3RvcmFnZQ=='' decodes to ''# cla-storage'', which is insufficient to determine the category or subcategory within the CNCF landscape. More context or a detailed description of the solution is needed to make an accurate ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'gatekeeper-library','ERROR','OK','ERROR',NULL,NULL,'ERROR','gatekeeper-library','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','App Definition and Development','Documentation','VuePress, MkDocs, Hugo','The provided content describes a website built using Docusaurus 2, which is a modern static website generator primarily used for documentation. Docusaurus falls under the ''App Definition and Development'' category in the CNCF landscape, specifically under')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'get-package-ids','ERROR','OK','ERROR',NULL,NULL,'ERROR','get-package-ids','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','10','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','App Definition and Development','CI/CD','Tekton, Argo Workflows, Jenkins X','The provided file describes a GitHub Action that finds package IDs for specific Docker images, which is a task related to CI/CD workflows. The action is defined in a YAML file, which is typical for CI/CD tools. The alternatives listed are other CI/CD too')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'k8s-conformance','ERROR','WARN','ERROR',NULL,NULL,'ERROR','k8s-conformance','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','11','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','App Definition and Development','Container Runtime','containerd, CRI-O, Kata Containers','The provided file describes a cloud-native platform based on Kubernetes, focusing on container runtime and orchestration. The commands and procedures mentioned are related to initializing and joining Kubernetes nodes, running conformance tests, and manag')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'microservice-restclient','ERROR','OK','ERROR',NULL,NULL,'ERROR','microservice-restclient','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','10','ERROR','93.0%',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','App Definition and Development','Microservice Tools','gRPC, Istio, Linkerd','The provided file decodes to ''microservice-restclient'', which suggests it is related to microservices and REST clients. This fits well under the ''App Definition and Development'' category in the CNCF landscape, specifically under ''Microservice Tools''. Alt')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'pg_hint_plan','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','pg_hint_plan','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','10','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','Database','Query Optimization','Vitess, TiDB, CockroachDB','The provided file describes ''pg_hint_plan'', a PostgreSQL extension that allows tweaking execution plans using hints in SQL comments. This fits under the ''Database'' category in the CNCF landscape, specifically under ''Query Optimization''. Alternatives like')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'pgskipper-backup-daemon','ERROR','OK','ERROR',NULL,NULL,'ERROR','pgskipper-backup-daemon','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-14','OK','ERROR','10','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','Database','Backup and Recovery','Velero, KubeDB, Stash','The solution described is focused on periodic backups and recovery of PostgreSQL databases, which aligns with the ''Backup and Recovery'' subcategory under ''Database'' in the CNCF landscape. Similar solutions in the CNCF landscape include Velero (for genera')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'pgskipper-dbaas-adapter','ERROR','OK','ERROR',NULL,NULL,'ERROR','pgskipper-dbaas-adapter','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-14','OK','ERROR','12','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','ERROR','Database','n/a','Vitess, TiDB, CockroachDB','The provided file describes a component that offers a REST API for logical database management, which aligns with the Database category in the CNCF landscape. The component appears to be a database adapter or middleware, which is why alternatives like Vi')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'pgskipper-monitoring-agent','ERROR','OK','ERROR',NULL,NULL,'ERROR','pgskipper-monitoring-agent','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-08','OK','ERROR','12','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','ERROR','Monitoring','n/a','Prometheus, Thanos, VictoriaMetrics','The name ''pgskipper-monitoring-agent'' suggests that this is a monitoring agent, likely for PostgreSQL (given the ''pg'' prefix). Since monitoring agents fall under the ''Monitoring'' category in the CNCF landscape, this seems to be the best fit. Alternatives')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'pgskipper-operator','OK','OK','ERROR',NULL,NULL,'ERROR','pgskipper-operator','ERROR','OK','SECURITY','INFO',NULL,'OK','2025-05-12','OK','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','Database','SQL Database','vitess, CloudNativePG, RadonDB PostgreSQL','The provided file describes ''Postgres-Operator'', which is a solution for running PostgreSQL as a service on Kubernetes and OpenShift. This clearly falls under the ''Database'' category in the CNCF landscape, specifically under ''SQL Database'' subcategory as')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'pgskipper-operator-core','ERROR','OK','ERROR',NULL,NULL,'ERROR','pgskipper-operator-core','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-02','OK','ERROR','14','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','ERROR','n/a','n/a','n/a','The provided base64 content decodes to ''# pgskipper-operator-core'', which is insufficient to determine the category or subcategory within the CNCF landscape. More context or description about the solution''s functionality, purpose, and use cases is needed')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'pgskipper-patroni','ERROR','OK','ERROR',NULL,NULL,'ERROR','pgskipper-patroni','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-16','OK','ERROR','13','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','ERROR','n/a','n/a','INFO','The provided base64 content decodes to ''# pgskipper-patroni'', which appears to be a very brief and unclear description. It might refer to a combination of ''pgskipper'' (possibly related to PostgreSQL) and ''Patroni'' (a popular tool for managing PostgreSQL ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'pgskipper-pgbackrest-sidecar','ERROR','OK','ERROR',NULL,NULL,'ERROR','pgskipper-pgbackrest-sidecar','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-14','OK','ERROR','13','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','ERROR','n/a','n/a','INFO','The provided content is insufficient to determine the category or subcategory within the CNCF landscape. The text appears to be a filename or a fragment without meaningful context about the solution''s functionality, purpose, or components. More informati')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'pgskipper-replication-controller','ERROR','OK','ERROR',NULL,NULL,'ERROR','pgskipper-replication-controller','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','10','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','Database','Replication','Vitess, TiDB, YugabyteDB','The provided file describes a component that offers a REST API for managing PostgreSQL publications, which is related to database replication. This functionality aligns with the ''Database'' category in the CNCF landscape, specifically under the ''Replicati')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'pgskipper-upgrade','ERROR','OK','ERROR',NULL,NULL,'ERROR','pgskipper-upgrade','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-14','OK','ERROR','13','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','ERROR','n/a','n/a','INFO','The provided base64 content decodes to ''# pgskipper-upgrade'', which is insufficient to determine the category or subcategory within the CNCF landscape. More context or description about the solution is needed to make an accurate classification.')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-api-linter-service','SECURITY','OK','OK',NULL,NULL,'OK','qubership-api-linter-service','OK','ERROR','SECURITY','INFO',NULL,'OK','2025-05-16','ERROR','SECURITY','6','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub</small>','OK','App Definition and Development','API Gateway','Kong, Traefik, Envoy','The provided file describes a Golang microservice that provides a REST API for linting OAS (OpenAPI Specification) files. This functionality is typically associated with API gateways or API management tools, which fall under the ''App Definition and Devel')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-16','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub</small>','OK','App Definition and Development','Application Definition & Image Build','Helm, Kustomize, Tanka','The provided file describes a Helm chart for deploying Qubership APIHUB to a Kubernetes cluster. Helm is a package manager for Kubernetes, which falls under the ''App Definition and Development'' category in the CNCF landscape, specifically under ''Applicat')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-agent','OK','OK','OK',NULL,NULL,'ERROR','qubership-apihub-agent','OK','OK','SECURITY','INFO',NULL,'OK','2025-04-26','OK','OK','3','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub</small>','OK','App Definition and Development','API Gateway','Kong, Traefik, Envoy, Gloo','The provided file describes a Helm chart for deploying the QuberShip APIHUB Agent to a Kubernetes cluster. The solution is focused on API management and gateway functionality, which aligns with the ''App Definition and Development'' category in the CNCF la')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-api-data-model','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-api-data-model','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-07','OK','ERROR','9','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','API Gateway','Kong, Apigee, Tyk','The description mentions converting JSON schema-based documents into a structured and simplified data tree, which is a common feature of API gateways that transform and manage API data. The modified version of ''udamir/api-model-tree'' suggests it''s relate')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-api-diff','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-api-diff','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-07','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','API Gateway','Kong, Envoy, Apigee, Tyk','The provided file describes a tool for generating API diffs, changelogs, and ensuring API versioning consistency, which aligns with the functionality of API gateways and management tools in the CNCF landscape. The tool supports various API specifications')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-api-doc-viewer','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-api-doc-viewer','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-07','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','API Gateway','Apollo GraphQL, GraphQL Playground, GraphiQL, Swagger UI','The provided solution is a library that renders JSON schemas, GraphQL schemas, and GraphAPI specifications in a human-readable way. It provides components like GraphQLOperationViewer and JsonSchemaViewer, which are used to visualize and interact with API')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-api-processor','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-api-processor','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-07','OK','ERROR','9','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, broadcast-pilot, frontend</small>','OK','API Gateway','API Management','Kong, Envoy, Apigee, Tyk','The solution described in the file focuses on unifying and normalizing API presentations, supporting OpenAPI and GraphQL specifications, and providing features like schema merging, reference resolution, and custom rules for document types. These function')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-api-unifier','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-api-unifier','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-07','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','API Infrastructure','API Gateway','Kong, Envoy, Gloo','The solution described in the file is focused on unifying APIs into a normalized presentation with support for OpenAPI and GraphQL specifications. It also mentions features like schema merging, reference resolution, and support for various API specificat')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-api-visitor','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-api-visitor','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-14','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','API Gateway','API Tools','Apigee, Kong, Tyk','The provided file describes a utility for type-safe OpenAPI specification crawling, which is related to API tools. The mention of ''schema object'' and ''self loops'' suggests it''s used for analyzing and validating API specifications, a common feature in API')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-apispec-view','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-apispec-view','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-07','OK','ERROR','9','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','Documentation','Docusaurus, VuePress, Docsify','The provided file describes a collection of UI components for displaying beautiful developer documentation from any OpenAPI document. This aligns with the ''App Definition and Development'' category in the CNCF landscape, specifically under the ''Documentat')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-backend','OK','OK','OK',NULL,NULL,'ERROR','qubership-apihub-backend','OK','OK','SECURITY','INFO',NULL,'OK','2025-05-15','OK','OK','6','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, broadcast-pilot</small>','ERROR','n/a','n/a','INFO','The provided file describes ''ot'' as a minimal operational-transformation library for collaborative editing, originally derived from a GitHub project. However, the description does not provide enough information to clearly categorize it within the CNCF la')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-build-task-consumer','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-build-task-consumer','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','Microservices','Express, Fastify, Koa','The provided file describes a Node.js microservice for APIHub Package versions builds. It includes installation, building, running, and testing the application, which aligns with the ''App Definition and Development'' category in the CNCF landscape. The ''M')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-ci','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-ci','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub</small>','OK','App Definition and Development','API Gateway','Kong, Traefik, Envoy','The file name ''qubernetes-apihub-ci'' suggests a Kubernetes-related tool with API capabilities, likely an API gateway or management solution. Given the limited information, it''s categorized under ''App Definition and Development'' with a subcategory of ''API')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-class-view','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-class-view','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-13','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','Application Definition & Image Build','Backstage, KubeVela, OAM','The provided description mentions a tool that provides a UML class diagram-like representation of entities and relations, which is typically used in application definition and development. The features like auto-layout, transitions animation, selection, ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-compatibility-suites','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-compatibility-suites','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-30','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','API Gateway','Kong, Apigee, Tyk','The provided file describes a solution focused on API compatibility and changes classification, specifically mentioning OpenAPI and GraphQL. This aligns with the ''API Gateway'' subcategory under ''App Definition and Development'' in the CNCF landscape. The ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-graphapi','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-graphapi','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-30','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','API Gateway','GraphQL Tools','Apollo Server, GraphQL Mesh, Hasura','The provided file describes a package that provides utilities to convert GraphQL schema into GraphAPI document and back, which is a tool for working with GraphQL APIs. This aligns with the CNCF category of API Gateway, specifically under GraphQL Tools, a')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-http-spec','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-http-spec','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-16','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','API Infrastructure','API Specifications','Swagger, Apicurio, Kusk','The provided file describes a converter for OpenAPI schemas to JSON schemas, which is a tool used in API development and specification management. This fits under the ''API Infrastructure'' category in the CNCF landscape, specifically under ''API Specificat')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-jest-chrome-in-docker-environment','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-jest-chrome-in-docker-environment','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-30','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','Testing','Browser Testing','Selenium, Cypress, TestCafe, Playwright','The described solution is focused on running Chrome browser in identical environments across different machines, including CI and local PCs, for screenshot tests. It leverages Docker to ensure consistency and simplifies interactions with Docker and Chrom')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-json-crawl','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-json-crawl','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-30','OK','ERROR','11','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','ERROR','n/a','n/a','INFO','The provided file describes a utility package for crawling/cloning JSON objects in a tree-like structure, which is a development tool rather than a cloud-native solution. The CNCF landscape primarily focuses on cloud-native technologies like container or')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-nodejs-dev-image','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-nodejs-dev-image','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-13','OK','ERROR','10','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','ERROR','App Definition and Development','Development Environment','n/a','The provided content describes a development environment setup with tools like Node, NPM, Yarn, Chrome, and Puppeteer. This fits best under the ''App Definition and Development'' category in the CNCF landscape, specifically under ''Development Environment''.')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-npm-gitflow','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-npm-gitflow','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','Package Management','Lerna, Yarn, Rush','The provided file describes a tool that automates common gitflow processes for NPM repositories, manages git branches according to a specific branching model, and updates versions for NPM and Lerna projects. This functionality is closely related to packa')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-postman-collections','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-postman-collections','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub</small>','OK','App Definition and Development','API Gateway','Kong, Apigee, Tyk','The provided content describes a solution for managing API keys, creating test data, and handling API requests, which aligns with the functionality of an API Gateway. The mention of ''apihub'' and the process of creating API keys and managing access sugges')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-protobufjs-research','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-protobufjs-research','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-02','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','API Gateway','Kong, Envoy, Linkerd','The provided file discusses the use of JSON descriptors for processing proto files in an APIHUB context, which suggests a focus on API management and development. The Cloud Native Computing Foundation (CNCF) landscape categorizes API gateways under ''App ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-rest-playground','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-rest-playground','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','API Gateway','Kong, Traefik, Envoy','The provided base64 content mentions ''qubership-apihub-rest-playground'' and a fork of ''elements'' from stoplightio, which is related to API development and tooling. This suggests the solution is likely an API gateway or API development framework. The CNCF')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-sniffer-agent','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-sniffer-agent','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-28','OK','ERROR','12','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub</small>','ERROR','n/a','n/a','INFO','The provided content describes a folder containing public data types and constants for interacting with external systems and users, but it does not provide enough information to determine a specific category or subcategory within the CNCF landscape. The ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-test-service','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-test-service','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-27','OK','ERROR','10','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub</small>','ERROR','API Gateway','n/a','Kong, Traefik, Envoy','The description mentions a microservice that exposes various API specifications (REST, GraphQL, Async, etc.) on various endpoints, which aligns with the functionality of an API Gateway. The solution is used for testing needs in the context of Quibership-')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-traffic-analyzer','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-traffic-analyzer','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-28','OK','ERROR','13','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub</small>','ERROR','n/a','n/a','n/a','The provided file describes utility code for helper functions (goroutines, hashing, UUID generation) but does not provide enough context to determine a specific CNCF category. Utility code alone is too generic to classify within the CNCF landscape, which')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-ui','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-ui','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, broadcast-pilot, frontend</small>','OK','API Infrastructure','API Documentation','Swagger UI, Redoc, Stoplight','The solution described, APIHUB, is focused on API documentation, design, and validation, which aligns with the ''API Infrastructure'' category in the CNCF landscape. It specifically falls under the ''API Documentation'' subcategory as it provides tools for m')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-ui-tests','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-ui-tests','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','Testing','Selenium, Cypress, TestCafe','The provided file describes a project used for creating and running auto-tests, primarily for UI E2E (End-to-End) testing, using the Playwright framework. This fits well under the ''Testing'' subcategory of ''App Definition and Development'' in the CNCF land')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-apihub-vscode','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-apihub-vscode','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-apihub</b><br><small>apihub, frontend</small>','OK','App Definition and Development','API Gateway','Kong, Apigee, Tyk','The solution described is an extension for Quberchip that allows publishing API specifications and related documents to APIHUB. This functionality aligns with the ''API Gateway'' subcategory under ''App Definition and Development'' in the CNCF landscape. The')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-av-scan-service','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','qubership-av-scan-service','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-15','OK','ERROR','11','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>k8sstream</small>','OK','Security','Scanning & Vulnerability','Clair, Trivy, Anchore Engine','The provided file describes an antivirus scan service that scans files for viruses using an HTTP API. This functionality aligns with the ''Scanning & Vulnerability'' subcategory under the ''Security'' category in the CNCF landscape. Similar projects in this ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-backup-daemon','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-backup-daemon','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>saqs</small>','OK','Storage','Backup & Restore','Velero, Kasten K10, Stash','The solution described in the file is primarily focused on backup and restore operations for databases like MongoDB and PostgreSQL. It provides a REST API for scheduling and managing backups, supports S3 storage, and includes features like eviction polic')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-cloud-passport-cli','ERROR','OK','ERROR',NULL,NULL,'OK','qubership-cloud-passport-cli','OK','ERROR','SECURITY','INFO',NULL,'OK','2025-05-06','ERROR','ERROR','8','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','OK','App Definition and Development','API Gateway','Kong, Envoy, Traefik','The provided file describes an open-source Python library used by QuberShip Cloud pass-port module, which appears to be a client library for interacting with a cloud service. Given that it''s a client library, it''s likely related to API interaction or gat')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-colly','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-colly','OK','OK','SECURITY','21',NULL,'OK','2025-05-16','OK','OK','4','OK','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small>broadcast-pilot</small>','OK','App Definition and Development','Application Configuration','KubeVela, Crossplane, Helm','The project described, ''qubership-colly'', is focused on tracking the usage of clusters and environments within clusters, supporting multiple clusters, grouping namespaces into environments, and displaying custom UI parameters. It also aims to collect res')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-consul','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-consul','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','13','OK','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small>consul, saqs</small>','ERROR','n/a','n/a','n/a','The provided content is insufficient to determine the specific CNCF category or subcategory for the Robot Framework. The description only mentions the usage of integration tests based on Robot Framework, but does not provide enough details about its func')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-consul-acl-configurator','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-consul-acl-configurator','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small>consul, saqs</small>','OK','Security and Compliance','Identity and Access Management (IAM)','Hashicorp Vault, SPIFFE/SPIRE, Keycloak, Dex','The provided file describes a solution that manages Consul ACL policies, roles, and rule bindings through Kubernetes custom resources. This functionality is primarily focused on access control and identity management within a cloud-native environment, wh')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-consul-backup-daemon','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-consul-backup-daemon','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small>consul, saqs</small>','OK','Management and Governance','Backup and Recovery','Velero, Kasten K10, Stash','The provided file describes a backup and recovery solution for Consul Service, which includes features like full manual backup, granular backup, and non-evictable backup options. It also provides API-based operations for backup and recovery, status check')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-base-images','SECURITY','OK','OK',NULL,NULL,'OK','qubership-core-base-images','ERROR','ERROR','SECURITY','INFO',NULL,'OK','2025-05-12','OK','SECURITY','6','OK','Not registered',NULL,NULL,NULL,'<b>qubership-core</b><br><small>base-image, core</small>','OK','App Definition and Development','Container Images','Distroless, Alpine Linux, Red Hat Universal Base Image (UBI)','The provided file describes a set of secure and feature-rich Alpine Linux-based container images designed for containerized applications. These images include pre-configured security settings, certificate management, user management, and initialization s')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-blue-green-state-monitor','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-blue-green-state-monitor','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','81.6%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','App Definition and Development','Application Configuration','Spring Cloud Config, Consul, etcd','The provided file describes a Spring Boot library for configuration and state monitoring, specifically mentioning integration with Consul for configuration management. This aligns with the ''App Definition and Development'' category in the CNCF landscape, ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-blue-green-state-monitor-quarkus','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-blue-green-state-monitor-quarkus','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','56.4%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','App Definition and Development','Microservice Tools','Spring Cloud, Micronaut, Quarkus','The provided file describes a library that integrates with Quarkus to provide configuration and state management for microservices, specifically mentioning features like BlueGreenStatePublisher and MicroserviceMutexService. This aligns with the ''App Defi')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-config-server','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-config-server','OK','ERROR','ERROR','${java.version}',NULL,'ERROR','2025-05-19','OK','ERROR','12','OK','42.0%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>cloud-core, core, java, spring</small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-context-propagation','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-context-propagation','OK','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','8','OK','77.5%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','Observability and Analysis','Tracing','OpenTelemetry, Jaeger, Zipkin','The solution described in the file is a context propagation framework designed to propagate values (such as headers, API versions, request IDs, etc.) between microservices. This functionality is crucial for distributed tracing, which is a key aspect of o')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-context-propagation-quarkus','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-context-propagation-quarkus','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','94.7%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','App Definition and Development','Application Framework','Spring Cloud, Micronaut, Quarkus, Helidon','The provided file describes a context propagation framework designed for microservices, which allows propagating values from one microservice to another. It supports various propagation methods (REST to REST, REST to Messaging, Messaging to REST, Messagi')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-control-plane','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-control-plane','ERROR','ERROR','ERROR','11',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','57.9%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>cloud-core, core, go, service-mesh</small>','OK','App Definition and Development','Application Definition & Image Build','Helm, Kustomize, Jsonnet','The provided content mentions ''qubership-repo-template'', which appears to be a template for creating a repository. Given the context, it seems to be related to defining or managing Kubernetes applications, possibly through templating. This aligns with th')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-core-operator','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','qubership-core-core-operator','ERROR','ERROR','ERROR','21',NULL,'ERROR','2025-05-19','OK','ERROR','14','OK','74.5%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>cloud-core, core, java, quarkus</small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-dbaas-agent','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-dbaas-agent','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','14','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-core</b><br><small>cloud-core, core, go</small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-error-handling','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-error-handling','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','36.1%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','App Definition and Development','Application Framework','Spring Boot, Micronaut, Quarkus','The provided content describes a Java-based error handling and logging library that integrates with SLF4J and Lombok. It focuses on application-level error management and logging, which aligns with the ''App Definition and Development'' category in the CNC')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-facade-operator','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-facade-operator','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','13','OK','64.1%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>cloud-core, core, go</small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-infra','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','qubership-core-infra','ERROR','ERROR','ERROR','${java.version}',NULL,'ERROR','2025-05-20','OK','ERROR','15','ERROR','0.0%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core</small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-ingress-gateway','SECURITY','OK','OK',NULL,NULL,'OK','qubership-core-ingress-gateway','ERROR','ERROR','SECURITY','INFO',NULL,'OK','2025-05-19','ERROR','SECURITY','7','OK','Not registered',NULL,NULL,NULL,'<b>qubership-core</b><br><small>cloud-core, core, envoy, service-mesh</small>','OK','Networking','API Gateway','Kong, Traefik, Contour, Gloo','The provided file describes an Ingress Gateway based on the Envoy proxy, which is a common component in API Gateway solutions. The description mentions dynamic configuration loading from a control plane and different types of gateways (public, private, i')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-junit-k8s-extension','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-junit-k8s-extension','OK','ERROR','ERROR','${java.version}',NULL,'ERROR','2025-05-19','OK','ERROR','12','OK','62.1%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','9','OK','79.4%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Observability and Analysis','Logging','Fluentd, Loki, OpenTelemetry','The provided file describes a logging package that supports different log levels, customizable log formats, and runtime log level changes. These features are characteristic of logging solutions within the Observability and Analysis category of the CNCF l')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-actuator-common','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-actuator-common','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-08','OK','ERROR','9','OK','82.5%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Observability and Analysis','Monitoring','Prometheus, OpenTelemetry, Jaeger','The provided file describes a Go library that includes functionality for health checks, API versioning, configuration properties, monitoring, and tracing. The monitoring and tracing features, in particular, align well with the Observability and Analysis ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-bg-kafka','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-bg-kafka','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-18','OK','ERROR','9','OK','43.5%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Messaging and Streaming','Event Brokers','Apache Kafka, NATS, RabbitMQ, Pulsar','The provided file describes a library that abstracts the consumption of messages from Kafka in Cloud-Core Blue Green scenarios. This indicates that the solution is related to messaging and event streaming, specifically around Kafka. The CNCF landscape ca')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-bg-state-monitor','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-bg-state-monitor','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-10','OK','ERROR','9','OK','87.0%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Observability and Analysis','Monitoring','Prometheus, Thanos, OpenTelemetry','The provided content describes a Go library for monitoring state, which aligns with the ''Observability and Analysis'' category in the CNCF landscape, specifically under ''Monitoring''. The library appears to interact with Consul for state management, sugges')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-dbaas-arangodb-client','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-dbaas-arangodb-client','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','82.5%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Database','NewSQL','TiDB, CockroachDB, YugabyteDB','The provided file describes a Go client library for interacting with ArangoDB databases, specifically designed to work with multi-tenancy and service databases. ArangoDB is a multi-model database that supports key-value, document, and graph data models, ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-dbaas-base-client','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-dbaas-base-client','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-05','OK','ERROR','11','OK','82.1%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','ERROR','Database','n/a','Vitess, TiDB, CockroachDB','The provided file describes a database client implementation for a REST API (DbAAS) that allows acquiring raw database connections and supports different database types like Cassandra, PostgreSQL, and MongoDB. This fits within the Database category of CN')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-dbaas-cassandra-client','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-dbaas-cassandra-client','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-05','OK','ERROR','9','OK','81.7%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Database','NewSQL','Cassandra, ScyllaDB, CockroachDB','The provided file describes a Go client library for interacting with Cassandra databases, specifically designed to work with multi-tenancy and service databases. It includes features like connection pooling, session management, and support for SSL/TLS. G')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-dbaas-clickhouse-client','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-dbaas-clickhouse-client','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-10','OK','ERROR','9','OK','82.7%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Database','SQL Database','Vitess, TiDB, CockroachDB','The provided file describes a Go client library for interacting with ClickHouse databases, specifically designed to work with multi-tenancy and service databases. It provides functionality for creating and managing database connections, executing queries')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-dbaas-mongo-client','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-dbaas-mongo-client','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-05','OK','ERROR','9','OK','86.7%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Database','NewSQL','Vitess, TiDB, CockroachDB','The provided file describes a Go client library for interacting with MongoDB databases, specifically designed to work with multi-tenancy and service databases. It supports features like connection pooling, SSL/TLS, and integration with dbas-aggregator. G')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-dbaas-opensearch-client','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-dbaas-opensearch-client','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-05','OK','ERROR','9','OK','76.3%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Database','Search Engine','Elasticsearch, Apache Solr, OpenSearch','The provided file describes a Go client library for interacting with OpenSearch databases, specifically designed to work with multi-tenancy and service databases. It provides functionality to create, manage, and query OpenSearch indices, aliases, and tem')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-dbaas-postgres-client','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-dbaas-postgres-client','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-05','OK','ERROR','9','OK','86.4%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Database','SQL Database','Vitess, TiDB, CockroachDB','The provided file describes a PostgreSQL client library that facilitates interaction with PostgreSQL databases, particularly in a multi-tenant environment. It supports both service and tenant databases, and it is built on top of the ''uptrace/bun'' ORM lib')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-error-handling','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-error-handling','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-03','OK','ERROR','9','OK','71.2%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','App Definition and Development','Error Handling and Logging','Sentry, OpenTelemetry, Fluentd, Elasticsearch, Prometheus','The provided file describes a Go library for handling exceptions with error codes, which includes features like unique error IDs, error codes in a specific format, error wrapping, stack trace preservation, and integration with logging and HTTP servers (l')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-fiber-server-utils','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-fiber-server-utils','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-05','OK','ERROR','9','OK','76.2%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','App Definition and Development','Microservice Tools','Go Micro, Kratos, Go Kit','The provided file describes a Go library (fiber-server-utils) that enhances the Fiber web framework with cloud-native capabilities such as health checks, metrics, tracing, and logging. This fits well under the ''App Definition and Development'' category in')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-maas-bg-segmentio','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-maas-bg-segmentio','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-30','OK','ERROR','9','OK','85.7%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Messaging and Eventing','Message Brokers','Apache Kafka, NATS, RabbitMQ','The provided file describes a library that adapts Blue Green Consumer for a Kafka client, specifically for the Segmentio Kafka Go client. This indicates that the solution is related to messaging systems, particularly Kafka, which is a prominent message b')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-maas-client','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-maas-client','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-10','OK','ERROR','9','OK','45.7%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Messaging and Streaming','Message Brokers','Apache Kafka, RabbitMQ, NATS, Pulsar','The provided file describes a Go client for performing operations with Maas, specifically focusing on Kafka and RabbitMQ integrations. The client supports operations such as creating, reading, and deleting topics, as well as message consumption in Blue-G')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-maas-core','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-maas-core','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-08','OK','ERROR','9','OK','54.7%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','App Definition and Development','Application Definition & Image Build','Dapr, Knative, Helm','The provided file describes a library (core-lib-go-maas-core) that provides methods to build MAAS (Metal as a Service) clients with default parameters like logger, namespace, MAAS agent URL, and auth supplier. This fits into the ''App Definition and Devel')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-maas-segmentio','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-maas-segmentio','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-10','OK','ERROR','9','OK','77.7%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Messaging and Eventing','Publish & Subscribe','Apache Kafka, NATS, RabbitMQ, Pulsar','The provided solution is a library that facilitates interaction with Kafka (specifically Kafka-go) for message production and consumption based on topic information received from Maas. It provides methods to create Kafka writers and readers, which are co')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-mux-server-utils','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-mux-server-utils','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-03','OK','ERROR','15','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-paas-mediation-client','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-paas-mediation-client','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-08','OK','ERROR','14','ERROR','78.6%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-rest-utils','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-rest-utils','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-08','OK','ERROR','9','OK','85.1%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Service Mesh','API Gateway','Istio, Linkerd, Envoy, Kong','The described solution is a library for route registration in a control plane, which allows microservices to make REST calls without knowing the URL host. It supports different types of routes (internal, private, public, and facade gateways) and integrat')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-lib-go-stomp-websocket','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-lib-go-stomp-websocket','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-08','OK','ERROR','9','OK','18.5%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, lib</small>','OK','Networking','Messaging','NATS, RabbitMQ, Apache Kafka','The provided content describes a Go library for STOMP (Simple Text Oriented Messaging Protocol) over WebSocket, which is primarily used for messaging. This fits well under the ''Networking'' category in the CNCF landscape, specifically under the ''Messaging')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-maas-agent','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-maas-agent','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','8','OK','57.3%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>cloud-core, core, go</small>','OK','Security','Identity and Access Management','Keycloak, SPIFFE, Dex','The `maas-agent` described in the file appears to be a proxy for transforming internal M2M security with local IdP to credentials compatible with a global MaaS service. This functionality aligns with Identity and Access Management (IAM) solutions in the ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-microservice-dependencies','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-microservice-dependencies','OK','ERROR','ERROR','Not specified',NULL,'ERROR','2025-05-12','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','App Definition and Development','Microservice Frameworks','Spring Cloud, Micronaut, Quarkus','The provided file describes `cloud-core-java-bom` as a BOM (Bill of Materials) that aggregates cloud-core libraries, excluding the `microservice-framework` library. This suggests it is related to dependency management and microservice development in Java')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-microservice-framework','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-microservice-framework','OK','ERROR','ERROR','Not specified',NULL,'ERROR','2025-05-20','OK','ERROR','9','OK','66.5%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','Microservices','Microservice Frameworks','Spring Cloud, Micronaut, Quarkus','The provided file describes a microservice framework intended for use in a blocking mode with WebClient, which suggests it is a tool for building microservices. The mention of Spring context initialization and MicroserviceApplicationBuilder further indic')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-microservice-framework-extensions','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-microservice-framework-extensions','ERROR','ERROR','ERROR','Not specified',NULL,'ERROR','2025-05-19','OK','ERROR','10','OK','63.3%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','App Definition and Development','API Gateway','Spring Cloud Gateway, Kong, Envoy','The provided file describes a framework extension for SpringDoc Swagger that adds additional functionality to handle secured requests (m2m, user, bearer) through Swagger UI. This fits well within the ''App Definition and Development'' category as it pertai')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-mongo-evolution','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-mongo-evolution','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','59.1%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','Database','Database Migration and Tooling','Liquibase, Flyway, SchemaHero','The provided file describes a library called ''spring-mongo-evolution'' which is a wrapper around Java Mongo Evolution. It allows using MongoTemplate in Mongo evolution scripts, which is particularly convenient for Spring Framework users. This library is f')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-paas-mediation','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-paas-mediation','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','12','OK','80.4%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>cloud-core, core, go</small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-process-orchestrator','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-process-orchestrator','OK','ERROR','ERROR','21',NULL,'ERROR','2025-05-19','OK','ERROR','8','OK','85.0%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','App Definition and Development','Workflow and Orchestration','Argo Workflows, Tekton, Cadence','The provided description outlines a Java-based process orchestration framework that handles task scheduling, execution management, and process flow control. This aligns with the ''Workflow and Orchestration'' subcategory under ''App Definition and Developme')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-quarkus-extensions','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-quarkus-extensions','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','44.5%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','App Definition and Development','Streaming & Messaging','Eclipse Vert.x, Spring Cloud Stream, Apache Kafka','The provided file describes an extension for the Quarkus framework that enables running a STOMP server over WebSockets or standard WebSocket protocol. This functionality falls under the ''Streaming & Messaging'' subcategory of the ''App Definition and Devel')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-rest-libraries','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-rest-libraries','ERROR','ERROR','ERROR','8',NULL,'ERROR','2025-05-20','OK','ERROR','9','OK','52.4%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','App Definition and Development','Web Frameworks','Spring Cloud Gateway, Envoy, Linkerd','The provided file describes a web client module that facilitates secure requests, automatically inserting JWT tokens, and integrates with Spring Framework. It is primarily a client-side component for making HTTP requests, which aligns with the ''App Defin')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-restclient','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-restclient','ERROR','ERROR','ERROR','Not specified',NULL,'ERROR','2025-05-19','OK','ERROR','10','OK','93.0%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','App Definition and Development','Microservices','Spring Cloud, Micronaut, Quarkus','The provided file describes a microservice implementation based on a REST client (resttemplate or webclient), which falls under the ''App Definition and Development'' category in the CNCF landscape. The ''Microservices'' subcategory is chosen because the sol')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-site-management','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-site-management','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','13','OK','26.2%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>cloud-core, core, go</small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-springboot-starter','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-springboot-starter','OK','ERROR','ERROR','Not specified',NULL,'ERROR','2025-05-12','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','App Definition and Development','Microservices Framework','Spring Cloud, Micronaut, Helidon','The provided file describes a Spring Boot starter parent wrapper that brings essential cloud-core libraries and is used for quickly creating microservices using a microservice-framework client. This aligns with the ''App Definition and Development'' catego')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-core-utils','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-core-utils','ERROR','ERROR','ERROR','Not specified',NULL,'ERROR','2025-05-19','OK','ERROR','10','OK','41.2%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib</small>','OK','Security and Compliance','TLS/SSL Libraries','Let''s Encrypt, Cert-Manager, OpenSSL, BoringSSL','The provided file describes a lightweight Java library focused on TLS configuration and authentication utilities, which falls under the Security and Compliance category in the CNCF landscape. The library provides features like default TLS configuration w')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-cql-driver','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','qubership-cql-driver','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','14','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','ERROR','n/a','n/a','INFO','The provided base64 content decodes to ''# qubershiq-cql-driver'', which is insufficient to determine the exact nature of the solution or its alignment with any specific CNCF category. More context or a detailed description is needed to accurately categori')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-credential-manager','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-credential-manager','OK','ERROR','SECURITY','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','Security and Compliance','Secrets Management','Vault, Sealed Secrets, External Secrets','The described solution, ''quberSHIP-credential-manager'', is focused on managing credentials and secrets in a Kubernetes environment. It provides functionality for handling secrets changes, watching secrets, and updating credentials, which aligns with the ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-dbaas','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-dbaas','OK','ERROR','ERROR','21',NULL,'ERROR','2025-05-19','OK','ERROR','8','OK','63.6%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, dbaas</small>','OK','Database','Database Proxy and Aggregation','Vitess, ProxySQL, TiDB','The provided description indicates that DBaaS is an aggregator for database adapters, managing requests for administered databases and sending them to the necessary adapter. It stores information about all databases used in a cloud project, isolated by n')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-dbaas-adapter-core','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-dbaas-adapter-core','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','12','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-core</b><br><small></small>','ERROR','Database','n/a','Vitess, TiKV, CloudNativePG','The description mentions ''Kubership DBaaS Adapter Core'' as a base library for all Kubership DBaaS adapters, which suggests it is related to database management in a cloud-native environment. Given the focus on databases and adapters, the most fitting CNC')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-dbaas-client','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-dbaas-client','ERROR','ERROR','ERROR','8',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','82.1%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, dbaas, java, lib</small>','OK','Database','Database Clients and Libraries','HikariCP, Agroal, Vitess','The provided file describes a Java DBaaS (Database as a Service) client library that provides utility methods for tests, specifically for working with a database pool and cache. This fits well under the ''Database'' category in the CNCF landscape, specific')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-deployment-status-provisioner','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-deployment-status-provisioner','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','14','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>saqs</small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-diag-proxy','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-diag-proxy','OK','OK','ERROR','INFO',NULL,'OK','2025-05-20','OK','OK','4','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>observability, proxy</small>','OK','Observability and Analysis','Tracing','Jaeger, Zipkin, OpenTelemetry','The described solution, ''diag-proxy'', is a proxy based on Nginx that facilitates the collection and forwarding of diagnostic information (profiling and tracing data) to respective collectors in different namespaces. It simplifies the configuration of add')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-disaster-recovery-daemon','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-disaster-recovery-daemon','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-13','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>saqs</small>','OK','Orchestration & Management','Disaster Recovery','Velero, Kasten, OpenEBS','The ''Qubership Disaster Recovery Daemon'' (DRD) is a service that establishes communication between the Site Manager and the current cluster operator or disaster recovery controller. It provides features like managing disaster recovery resources and imple')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-docker-integration-tests','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-docker-integration-tests','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-12','OK','ERROR','11','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>saqs</small>','ERROR','Testing','n/a','Sonobuoy, Testkube','The provided description mentions a ''Robot Framework library'' that provides basic keywords to write RF integration tests for Kubernetes-based applications. This suggests the solution is focused on testing within a Kubernetes environment. The CNCF landsca')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-docker-opensearch','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-docker-opensearch','ERROR','ERROR','ERROR','11',NULL,'ERROR','2025-04-16','OK','ERROR','10','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>opensearch, saqs</small>','OK','Security and Compliance','Policy Management','Open Policy Agent (OPA), Kyverno, Falco','The provided file describes a security filtering plugin for OpenSearch that manages access control and policy enforcement for Index State Management (ISM) operations. This functionality aligns with the ''Security and Compliance'' category in the CNCF lands')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-env-checker','OK','WARN','ERROR',NULL,NULL,'ERROR','qubership-env-checker','OK','OK','SECURITY','INFO',NULL,'OK','2025-05-14','OK','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>observability</small>','OK','App Definition and Development','Testing','Sonobuoy, kube-bench, Polaris','The described solution, ''qubership-env-checker'', is an independent microservice designed to validate Kubernetes or OpenShift environments. It performs checks on infrastructure, Kubernetes entities, labels, annotations, variables, and generates detailed r')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-envgene','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-envgene','OK','ERROR','ERROR','11',NULL,'ERROR','2025-05-20','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','OK','App Definition and Development','Application Configuration','Kustomize, Helm, Jsonnet','The provided file describes a tool named ''EnvGene'' which is used for environment generation and configuration management. It involves defining environments, templates, and configurations in YAML files, which aligns with the ''Application Configuration'' su')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-envgene-instance','SKIP','OK','SKIP',NULL,NULL,'SKIP','qubership-envgene-instance','ERROR','SKIP','SKIP','INFO',NULL,'SKIP','2025-04-16','OK','SKIP','6','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','ERROR','n/a','n/a','INFO','The provided base64-encoded content decodes to ''# qubership-envgen-instance'', which is insufficient to determine the category or subcategory within the CNCF landscape. No meaningful description or context is provided to analyze the solution''s purpose, fu')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-envgene-template','SKIP','OK','SKIP',NULL,NULL,'SKIP','qubership-envgene-template','ERROR','SKIP','SKIP','Not specified',NULL,'SKIP','2025-05-20','OK','SKIP','8','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','ERROR','n/a','n/a','n/a','The provided file content is a base64-encoded string ''IyBxdWJlcnNoaXAtZW52Z2VuZS10ZW1wbGF0ZQ=='', which decodes to ''# qubership-envgen-engine-template''. This is insufficient to determine the category or subcategory within the CNCF landscape, as it lacks d')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-external-logging-installer','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-external-logging-installer','OK','OK','SECURITY','INFO',NULL,'OK','2025-04-28','OK','OK','5','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability</small>','OK','Observability and Analysis','Logging','Fluent Bit, Promtail, OpenTelemetry Collector','The provided file describes FluentD as a tool for collecting self logs from containers on a VM and sending them to Graylog. This functionality falls under the ''Logging'' subcategory of ''Observability and Analysis'' in the CNCF landscape. FluentD is a well-')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-fluent-pipeline-tests','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-fluent-pipeline-tests','OK','OK','SECURITY','INFO',NULL,'OK','2025-05-20','OK','OK','4','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability, testing</small>','OK','Observability and Analysis','Logging','Fluentd, Fluent Bit, Logstash, Vector','The provided content discusses a testing pipeline for Fluentd and Fluent Bit, which are well-known logging agents in the CNCF landscape. The mention of ''fluentd'', ''fluentbit'', and ''fluentbit-ha'' suggests that the solution is related to log collection and')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-fluentd','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-fluentd','OK','OK','SECURITY','INFO',NULL,'OK','2025-05-20','OK','OK','4','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability</small>','OK','Observability and Analysis','Logging','Fluent Bit, Logstash, Vector','The provided file describes a custom FluentD image with additional plugins installed. FluentD is a widely used log collector and processor, which falls under the ''Logging'' subcategory of ''Observability and Analysis'' in the CNCF landscape. Alternatives li')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-git-system-follower','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-git-system-follower','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-16','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','OK','App Definition and Development','Package Management','Helm, Kustomize, Flux, Argo CD','The solution described in the file is a package manager for Git providers, specifically designed to manage repository branch content and configuration. It automates installations, updates, and removals, ensuring consistency and reducing manual interventi')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-grafana-plugins-init','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-grafana-plugins-init','OK','OK','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>monitoring, observability</small>','OK','Observability and Analysis','Monitoring','Prometheus, Thanos, Cortex','The provided file describes a container for Grafana customization with predefined plugins. Grafana is a popular open-source platform for monitoring and observability, which aligns with the ''Observability and Analysis'' category in the CNCF landscape. Spec')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-grafana-reporter','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-grafana-reporter','OK','OK','SECURITY','INFO',NULL,'OK','2025-05-02','OK','OK','4','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>monitoring, observability</small>','OK','Monitoring','Dashboards','Grafana, Prometheus, Thanos, VictoriaMetrics','The solution described is a Grafana reporter, which generates dashboard reports in PDF format. It integrates with Grafana to fetch dashboard data and render panels. This fits into the Monitoring category under Dashboards, as it is specifically designed t')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-graphite-remote-adapter','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-graphite-remote-adapter','OK','OK','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','OK','7','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>monitoring, observability</small>','ERROR','Monitoring','n/a','Prometheus, Grafana, Thanos','The provided file describes a package named ''ui'' that contains static files and templates used in the web UI, which are compiled into the Prometheus Remote Adapter binary using the go-bindata tool. This suggests that the solution is related to monitoring')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-graylog-archiving-plugin','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-graylog-archiving-plugin','OK','OK','ERROR','1.8',NULL,'ERROR','2025-05-20','OK','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability, plugin</small>','OK','Storage','Backup & Restore','Velero, Stash, Kasten K10','The Graylog Archiving Plugin is designed for archiving Elasticsearch indices, which falls under the category of backup and restore solutions in the CNCF landscape. It provides functionality to create, manage, and restore archives of Elasticsearch indices')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-graylog-auth-proxy','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-graylog-auth-proxy','OK','OK','SECURITY','INFO',NULL,'OK','2025-05-20','OK','OK','4','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability, proxy</small>','OK','Security and Compliance','Authentication and Authorization','Dex, Keycloak, OAuth2 Proxy','The solution described is a proxy that handles authentication and authorization for users accessing the Graylog server using third-party databases like LDAP or OAuth services (e.g., Keycloak). It fits under the ''Security and Compliance'' category because ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-graylog-obfuscation-plugin','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-graylog-obfuscation-plugin','OK','OK','OK','1.8',NULL,'OK','2025-05-20','OK','OK','3','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability, plugin</small>','OK','Security','Policy & Governance','Open Policy Agent (OPA), Falco, Kyverno','The provided file describes a plugin for automatic analysis and obfuscation of input log messages, which aligns with security and policy enforcement tools in the CNCF landscape. The plugin seems to focus on log obfuscation, which is a security feature to')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-graylog-plugins-init','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-graylog-plugins-init','OK','OK','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability</small>','OK','Observability and Analysis','Logging','Fluentd, Fluent Bit, Logstash','The provided file describes an init container for customizing Graylog with predefined plugins. Graylog is a centralized logging solution that falls under the ''Observability and Analysis'' category in the CNCF landscape, specifically under the ''Logging'' su')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-hive-metastore','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-hive-metastore','ERROR','ERROR','SECURITY','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','Database','Data Warehouse','Apache Hive, Presto, Trino','The solution described is focused on deploying Hive-Metastore in Kubernetes, which is a metadata storage service for Hive, a data warehouse software. Hive-Metastore is a critical component for managing metadata in data warehousing solutions. The alternat')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-hub-test','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-hub-test','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-12','OK','ERROR','15','ERROR','Not registered',NULL,NULL,NULL,'ERROR','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-integration-catalog-library','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-integration-catalog-library','OK','OK','SECURITY','21',NULL,'OK','2025-05-16','ERROR','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-integration</b><br><small>broadcast-pilot, qip</small>','OK','App Definition and Development','Application Definition & Image Build','Backstage, Tilt, Shipa','The description mentions that ''Catalog Library'' is part of a global integration solution and involves building a proper code transition between ''Runtime Catalog'' and ''Design Time Catalog'' microservices. This suggests it is related to application developm')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-integration-checkstyle','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-integration-checkstyle','ERROR','ERROR','ERROR','Not specified',NULL,'ERROR','2025-04-16','OK','ERROR','13','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-integration</b><br><small>qip</small>','ERROR','App Definition and Development','Application Definition & Image Build','n/a','The provided content describes a configuration for an integration solution called ''qubership-integration-platform''. However, the description is too vague to definitively categorize it within the CNCF landscape. Based on the mention of ''configuration'' and')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-integration-designtime-catalog','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-integration-designtime-catalog','OK','OK','SECURITY','Not specified',NULL,'OK','2025-05-15','ERROR','OK','6','OK','Not registered',NULL,NULL,NULL,'<b>qubership-integration</b><br><small>broadcast-pilot, qip</small>','OK','App Definition and Development','Microservices Tools','Istio, Linkerd, Consul','The provided description mentions a microservice handling design time configuration, which is part of a global integration solution. This fits well within the ''App Definition and Development'' category, specifically under ''Microservices Tools'', as it deal')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-integration-engine','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-integration-engine','OK','OK','SECURITY','Not specified',NULL,'OK','2025-05-16','ERROR','OK','6','OK','Not registered',NULL,NULL,NULL,'<b>qubership-integration</b><br><small>broadcast-pilot, qip</small>','OK','Integration & Delivery','Service Integration','Apache Camel, Kubernetes Service Mesh (Istio, Linkerd), Cloud Native Buildpacks','The solution described in the file appears to be a part of a global integration platform, specifically handling configuration and runtime orchestration via Apache Camel logic and specifications. It is closely related to service integration and delivery, ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-integration-platform','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-integration-platform','ERROR','OK','SECURITY','INFO',NULL,'OK','2025-05-15','OK','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-integration</b><br><small>broadcast-pilot, qip</small>','OK','App Definition and Development','Package Management','Helm, Kustomize, Operator Framework','The provided file contains a series of commands related to managing Kubernetes applications using Helm, which is a package manager for Kubernetes. Helm is used for deploying, upgrading, and managing applications on Kubernetes clusters. The file includes ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-integration-runtime-catalog','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-integration-runtime-catalog','OK','OK','SECURITY','Not specified',NULL,'OK','2025-05-15','ERROR','OK','6','OK','Not registered',NULL,NULL,NULL,'<b>qubership-integration</b><br><small>broadcast-pilot, qip</small>','OK','App Definition and Development','Application Definition & Image Build','Helm, Kustomize, Operator Framework','The provided content describes Runtime Catalog as part of a global integration solution, which handles runtime configuration and is utilized by a microservice (Engine). This suggests it is involved in managing application configurations and deployments, ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-integration-sessions-management','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-integration-sessions-management','OK','OK','SECURITY','Not specified',NULL,'OK','2025-05-19','ERROR','OK','6','OK','Not registered',NULL,NULL,NULL,'<b>qubership-integration</b><br><small>broadcast-pilot, qip</small>','OK','App Definition and Development','Microservices Management','Istio, Linkerd, Consul','The provided description mentions a microservice that manages sessions created during the execution of integration flows called ''chains'' and stores these sessions in OpenSearch. This functionality aligns with microservices management, which is a part of ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-integration-ui','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-integration-ui','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','14','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-integration</b><br><small>qip</small>','ERROR','n/a','n/a','n/a','The provided base64 content decodes to ''qubership-integration-ui'', which is insufficient to determine the exact category or subcategory within the CNCF landscape. More context or a detailed description of the solution''s functionality, architecture, and u')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-integration-variables-management','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-integration-variables-management','OK','OK','SECURITY','Not specified',NULL,'OK','2025-05-15','ERROR','OK','7','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-integration</b><br><small>broadcast-pilot, qip</small>','OK','App Definition and Development','Application Definition & Image Build','Helm, Kustomize, Jsonnet','The provided content describes a solution for managing variables within integration flows, which is a part of application configuration and definition. The solution is mentioned to be part of a global integration platform and is installed via Docker Comp')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-inventory-tool-cli','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-inventory-tool-cli','OK','OK','ERROR','Not specified',NULL,'OK','2025-05-12','OK','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>observability</small>','OK','App Definition and Development','Application Definition & Image Build','Helm, Kustomize, Skaffold','The provided file describes a Java application build and packaging process using Maven, along with instructions for running and configuring the application. This fits well into the ''App Definition and Development'' category of the CNCF landscape, specific')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-inventory-tool-core','OK','WARN','ERROR',NULL,NULL,'ERROR','qubership-inventory-tool-core','OK','OK','ERROR','Not specified',NULL,'OK','2025-05-12','OK','OK','7','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>observability</small>','OK','App Definition and Development','Application Definition & Image Build','Helm, Kustomize, Operator Framework','The provided base64 content decodes to ''# Qubership inventory-tool-core library'', which suggests it might be a tool or library related to Kubernetes (given the mention of ''Qubership'', possibly a play on ''Kubernetes''). The description is minimal, but it h')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-jaeger','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-jaeger','OK','OK','SECURITY','INFO',NULL,'OK','2025-05-14','OK','OK','4','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>broadcast-pilot, observability, tracing</small>','OK','Observability and Analysis','Monitoring','Prometheus, OpenMetrics, Thanos','The description indicates that the ''Readiness Probe'' is used for executing checks and providing custom readiness probes for Jaeger, which is a part of monitoring and observability in cloud-native environments. The solution fits well within the ''Observabi')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-kube-events-generator','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-kube-events-generator','OK','OK','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability, testing</small>','OK','App Definition and Development','Application Definition & Image Build','Argo Events, Knative Eventing, NATS Streaming','The provided file describes a Kubernetes event generator, which is a tool for generating Kubernetes events. This falls under the ''App Definition and Development'' category in the CNCF landscape, specifically under ''Application Definition & Image Build'' as')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-kube-events-reader','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-kube-events-reader','OK','OK','ERROR','INFO',NULL,'OK','2025-05-20','OK','OK','4','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability</small>','OK','Observability and Analysis','Logging','Fluentd, Fluent Bit, Prometheus, Grafana','The solution described is a Kubernetes events reader that collects and processes Kubernetes events, sending them to configured outputs like logs (to be processed by Fluentd/FluentBit) or metrics (to be scraped by Prometheus). This fits under the ''Observa')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-landscape-config','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-landscape-config','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-23','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-landscape</b><br><small></small>','OK','App Definition and Development','Configuration','Kustomize, Helm, Jsonnet','The provided file describes a project that extends/overrides the base configuration of the CNCF landscape. It involves managing configuration files in YAML format, merging them into a base configuration, and handling additional items like logos and icons')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-landscape-config-processor','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-landscape-config-processor','OK','ERROR','ERROR','11',NULL,'ERROR','2025-04-23','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-landscape</b><br><small></small>','OK','App Definition and Development','Configuration','kustomize, helm, jsonnet','The solution described is a tool for managing and merging YAML configuration files, specifically for the CNCF Landscape application. This falls under the ''Configuration'' subcategory of ''App Definition and Development'' in the CNCF landscape. Alternatives ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-log-exporter','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-log-exporter','OK','OK','SECURITY','INFO',NULL,'OK','2025-04-28','OK','OK','4','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability</small>','OK','Observability and Analysis','Logging','Fluentd, Logstash, Vector','The described solution, ''log-exporter'', is designed to evaluate Prometheus metrics based on logs retrieved from Graylog, New Relic, or Loki via API. It processes logs to generate metrics (counter, gauge, histogram) and exports them to Prometheus or Victo')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-log-generator','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-log-generator','OK','OK','ERROR','Not specified',NULL,'OK','2025-05-20','OK','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability</small>','OK','Observability and Analysis','Logging','Fluentd, Loki, Elasticsearch (EFK stack)','The Quberchip Log Generator is a tool designed to generate high load logs for performance testing and debugging purposes. It allows for the creation of logs based on predefined templates (Java, Go, JSON logs) and custom patterns, which aligns with the fu')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-logging-operator','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-logging-operator','OK','OK','SECURITY','INFO',NULL,'OK','2025-05-20','OK','OK','7','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability</small>','ERROR','n/a','n/a','INFO','The provided content does not contain enough information to determine the CNCF category or subcategory. The description mentions Lua scripts for parsing key-value pairs and updating levels, but it does not provide details about the broader solution, fram')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-maas','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-maas','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','8','OK','61.3%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, go, maas</small>','OK','Messaging and Streaming','Message Brokers','RabbitMQ, Kafka, NATS, Pulsar','The solution described, Maas (Messaging as a Service), is focused on managing messaging entities like queues, exchanges, and topics on RabbitMQ and Kafka brokers. It provides declarative configuration and REST API for managing these entities, which align')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-maas-client','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-maas-client','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','87.8%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib, maas</small>','OK','Messaging and Eventing','Message Brokers','RabbitMQ, Apache Kafka, NATS, Apache Pulsar','The provided file describes a module that works with RabbitMQ''s blue/green deployment mode, focusing on dynamic queue creation and management during microservice runtime. This fits squarely within the ''Messaging and Eventing'' category of the CNCF landsca')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-maas-client-quarkus','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-maas-client-quarkus','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','47.6%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib, maas</small>','OK','App Definition and Development','Streaming & Messaging','Apache Kafka, RabbitMQ, NATS','The provided file describes a Quarkus extension for a Maas client, which includes support for Kafka and RabbitMQ. This suggests that the solution is related to messaging and streaming, which falls under the ''Streaming & Messaging'' subcategory of the ''App')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-maas-client-spring','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-maas-client-spring','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','100.0%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib, maas</small>','OK','App Definition and Development','Message Queue','RabbitMQ, Apache Kafka, NATS','The provided file describes a solution that involves dynamic queue bindings, versioned exchanges, and the use of RabbitMQ (evident from classes like `MaasRabbitLocalDevConfig` and annotations like `@EnableDynamicQueueBindings`). This aligns with the ''Mes')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-maas-declarative-client-commons','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-maas-declarative-client-commons','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','71.9%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib, maas</small>','OK','App Definition and Development','Streaming & Messaging','Apache Kafka, NATS, RabbitMQ, Pulsar','The provided file describes a module that provides a common framework to decoratively create Kafka consumers and producers, which falls under the ''Streaming & Messaging'' subcategory of the ''App Definition and Development'' category in the CNCF landscape. ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-maas-declarative-client-quarkus','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-maas-declarative-client-quarkus','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','74.9%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib, maas</small>','OK','ERROR CATEGORY','ERROR SUBCATEGORY','INFO',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-maas-declarative-client-spring','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-maas-declarative-client-spring','ERROR','ERROR','ERROR','17',NULL,'ERROR','2025-05-19','OK','ERROR','9','OK','81.9%',NULL,NULL,NULL,'<b>qubership-core</b><br><small>core, java, lib, maas</small>','OK','ERROR CATEGORY','ERROR SUBCATEGORY','INFO',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-mistral','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-mistral','ERROR','ERROR','SECURITY','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','App Definition and Development','Application Definition & Image Build','Tekton, Argo, Cloud Native Buildpacks','The provided content describes a process for creating custom actions within a Python library, specifically for Mistral, which involves setting up a Python package, defining custom actions, and building Docker images to include these actions. This aligns ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-mistral-operator','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-mistral-operator','ERROR','ERROR','SECURITY','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','ERROR CATEGORY','ERROR SUBCATEGORY','INFO',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-mongodb-driver','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','qubership-mongodb-driver','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','12','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','ERROR','Database','n/a','MongoDB, PostgreSQL, MySQL, Cassandra, CockroachDB','The file mentions ''mongodb-driver'' in the title, which suggests that the solution is related to MongoDB, a popular NoSQL database. The content provides instructions on how to get started, integrate with tools, collaborate with a team, and deploy, which a')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-monitoring-operator','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-monitoring-operator','OK','OK','SECURITY','INFO',NULL,'OK','2025-05-09','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>monitoring, observability</small>','ERROR','Monitoring','n/a','Prometheus, Grafana, Alertmanager, Thanos, VictoriaMetrics','The provided file describes a monitoring solution that includes components like Grafana, Prometheus, Alertmanager, and VictoriaMetrics. These components are used for monitoring and alerting in a cloud-native environment. The file also mentions various ex')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-network-latency-exporter','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-network-latency-exporter','OK','OK','SECURITY','INFO',NULL,'OK','2025-05-20','OK','OK','4','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>monitoring, observability</small>','OK','Observability and Analysis','Monitoring','Prometheus, InfluxDB, OpenTelemetry','The solution described is a network latency exporter that collects RTT and TTL metrics and sends them to InfluxDB or Prometheus. This fits squarely within the Observability and Analysis category of the CNCF landscape, specifically under Monitoring. It is')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-nifi','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-nifi','OK','OK','ERROR','15',NULL,'ERROR','2025-05-20','OK','OK','5','OK','68.4%',NULL,NULL,NULL,'<b>qubership-nifi</b><br><small>nifi</small>','OK','App Definition and Development','Workflow Orchestration','Apache NiFi, Argo Workflows, Tekton Pipelines','The solution described is a fork of Apache NiFi, which is a dataflow platform designed to automate the movement of data between systems. It fits into the ''Workflow Orchestration'' subcategory under ''App Definition and Development'' in the CNCF landscape be')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-nifi-registry','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-nifi-registry','OK','OK','ERROR','17',NULL,'ERROR','2025-05-20','OK','OK','5','OK','79.8%',NULL,NULL,NULL,'<b>qubership-nifi</b><br><small>nifi-registry</small>','OK','App Definition and Development','Database','Apache NiFi Registry, PostgreSQL','The solution described is a fork of Apache NiFi Registry with additional support for PostgreSQL database storage and configuration. It falls under the ''App Definition and Development'' category because it is a tool designed to manage and version control d')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-nosqldb-operator-core','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','qubership-nosqldb-operator-core','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','11','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','Database','Database Operator','KubeDB, Percona Operator for MySQL, Crunchy PostgreSQL Operator','The provided file name ''qubership-nosqldb-operator-core'' suggests that this is a Kubernetes operator for managing NoSQL databases. Operators fall under the ''Database'' category in the CNCF landscape, specifically under the ''Database Operator'' subcategory.')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-observability-examples','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-observability-examples','OK','OK','SECURITY','INFO',NULL,'OK','2025-04-28','OK','OK','7','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>examples, observability</small>','ERROR','Observability and Analysis','n/a','Prometheus, Grafana, Jaeger, Fluentd, OpenTelemetry','The filename ''qubership-observability-examples'' suggests that the content is related to observability, which is a key category in the CNCF landscape. Observability tools help in monitoring, logging, and tracing applications. Given the lack of detailed co')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-observability-operator','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-observability-operator','OK','OK','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','OK','6','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>observability</small>','OK','Observability and Analysis','Monitoring','Prometheus, Thanos, OpenTelemetry, Grafana','The file name ''qubership-observability-operator'' suggests that the solution is related to observability, which is a key category in the CNCF landscape. Given the focus on observability, it likely falls under the ''Observability and Analysis'' category with')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-open-telemetry-collector','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-open-telemetry-collector','OK','OK','OK','INFO',NULL,'OK','2025-05-02','OK','OK','3','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>observability</small>','OK','Observability and Analysis','Tracing','Jaeger, Zipkin, Prometheus, OpenTelemetry','The provided file describes an implementation based on OpenTelemetry Collector, which is a tool for receiving, processing, and exporting telemetry data (traces, metrics, and logs). OpenTelemetry is a part of the CNCF landscape under the ''Observability an')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-opensearch','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-opensearch','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-06','OK','ERROR','13','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>opensearch, saqs</small>','ERROR','n/a','n/a','n/a','The provided content is insufficient to determine the exact category within the CNCF landscape. It mentions the ''Robot Framework'' (http://robotframework.org/), which is a generic test automation framework, but does not provide enough context about its cl')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-opensearch-curator','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-opensearch-curator','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>opensearch, saqs</small>','OK','Management and Governance','Cost Management','kube-janitor, kube-cleanup, kube-downscaler','The Elasticsearch Indices Cleaner is a tool designed to manage and clean up Elasticsearch indices based on predefined patterns, which aligns with the ''Management and Governance'' category in the CNCF landscape. Specifically, it falls under ''Cost Managemen')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-opensearch-dbaas-adapter','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-opensearch-dbaas-adapter','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-22','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>opensearch, saqs</small>','OK','Database','Search Indexing','Elasticsearch, OpenSearch, Apache Solr, Meilisearch','The provided file describes a REST API for a DBaaS OpenSearch adapter, which is used to manage databases, users, and resources within an OpenSearch environment. OpenSearch is a search and analytics engine derived from Elasticsearch, and it falls under th')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-opensearch-monitoring','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-opensearch-monitoring','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','9','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>opensearch, saqs</small>','OK','Observability and Analysis','Monitoring','Prometheus, Thanos, VictoriaMetrics','The provided file describes a service that collects metrics from an OpenSearch cluster using custom scripts. This functionality falls under the ''Observability and Analysis'' category in the CNCF landscape, specifically under the ''Monitoring'' subcategory. ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-opentelemetry-helm-charts','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-opentelemetry-helm-charts','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-15','OK','ERROR','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>observability</small>','OK','Observability and Analysis','Tracing','Jaeger, Zipkin, SkyWalking','The provided file describes configurations for the OpenTelemetry Operator, which is a part of the OpenTelemetry project. OpenTelemetry is a set of APIs, libraries, agents, and instrumentation to enable observability in cloud-native applications. It falls')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-pipelines-common-python-library','OK','OK','ERROR',NULL,NULL,'OK','qubership-pipelines-common-python-library','OK','OK','OK','INFO',NULL,'OK','2025-05-12','OK','OK','2','OK','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','OK','App Definition and Development','Continuous Integration & Delivery','Tekton, Argo Workflows, Jenkins X','The provided file describes ''Quubership Pipelines Common Library'', which is a Python library providing clients and wrappers for common devops services like Jenkins, MinIO, and GitLab Pipelines. This suggests it is used in the context of CI/CD workflows. ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-pipelines-modules-ops','OK','OK','ERROR',NULL,NULL,'OK','qubership-pipelines-modules-ops','OK','OK','OK','INFO',NULL,'OK','2025-05-19','OK','OK','2','OK','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','OK','App Definition and Development','Application Definition & Image Build','Tekton, Argo Workflows, Jenkins X','The file name ''qubership-pipelines-modules-ops'' suggests that the solution is related to pipelines and modules, likely for CI/CD or workflow automation. This aligns with the ''App Definition and Development'' category in the CNCF landscape, specifically un')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-profiler-agent','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-profiler-agent','OK','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-16','OK','OK','10','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>broadcast-pilot, observability, profiler</small>','ERROR','n/a','n/a','n/a','The provided content describes a plugin for instrumenting HTTP context in Tomcat <= 9.x, WildFly <= 26.x, and Spring Boot <= 2.x, but it does not provide enough information to categorize it within the CNCF landscape. The CNCF landscape primarily focuses ')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-prometheus-adapter-operator','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-prometheus-adapter-operator','OK','OK','ERROR','INFO',NULL,'OK','2025-05-13','OK','OK','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>monitoring, observability</small>','ERROR','n/a','n/a','n/a','The provided content describes a directory containing configuration and templates for generating HTML/Markdown documentation of an AMS operator''s custom resource definitions, using the ''gen-crd-api-reference-docs'' project. However, it does not provide en')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-query-exporter','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-query-exporter','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-14','OK','ERROR','10','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','OK','Observability and Analysis','Monitoring','Prometheus, Thanos, Cortex','The file name ''qubership-query-exporter'' suggests that this is a tool related to exporting queries, likely metrics or logs, which is a common functionality in monitoring solutions. Given the CNCF landscape, this would best fit under ''Observability and An')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-renovate-config','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','qubership-renovate-config','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-04-16','OK','ERROR','14','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','ERROR','n/a','n/a','INFO','The provided content is insufficient to determine the category or subcategory within the CNCF landscape. The text ''qubership-renovate-config'' does not provide enough context about the solution''s purpose, functionality, or components to make an accurate c')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-repo-template','SECURITY','ERROR','OK',NULL,NULL,'OK','qubership-repo-template','ERROR','ERROR','SECURITY','INFO',NULL,'OK','2025-04-16','ERROR','SECURITY','9','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','OK','App Definition and Development','Application Definition & Image Build','Helm, Kustomize, Jsonnet','The provided file describes a repository template named ''qubership-repo-template'' which is likely used for defining and managing Kubernetes application deployments. Based on the CNCF landscape, this fits best under ''App Definition and Development'' with a')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-spark-on-k8s','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-spark-on-k8s','ERROR','ERROR','SECURITY','Not specified',NULL,'ERROR','2025-05-19','OK','ERROR','14','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small></small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-tcp-duplicator','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-tcp-duplicator','OK','OK','SECURITY','INFO',NULL,'OK','2025-04-28','OK','OK','4','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>logging, observability</small>','OK','Networking','Service Proxy','Envoy, Linkerd, NGINX','The solution described is a TCP proxy that mirrors data to configured servers, which aligns with the networking category in the CNCF landscape. Specifically, it falls under the ''Service Proxy'' subcategory as it acts as an intermediary for TCP traffic. Al')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-test-pipelines','ERROR','ERROR','ERROR',NULL,NULL,'ERROR','qubership-test-pipelines','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-19','OK','ERROR','10','OK','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','OK','App Definition and Development','Continuous Integration & Delivery','Argo CD, Flux, Tekton','The provided file describes a GitHub Action that verifies Kubernetes deployments, including status checks, log collection, and test validation. This functionality aligns with Continuous Integration & Delivery (CI/CD) tools in the CNCF landscape, which fo')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-testing-platform-auth-library','SECURITY','OK','OK',NULL,NULL,'OK','qubership-testing-platform-auth-library','ERROR','ERROR','SECURITY','1.8',NULL,'OK','2025-05-20','ERROR','SECURITY','11','OK','Not registered',NULL,NULL,NULL,'<b>qubership-tp</b><br><small></small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-testing-platform-common-library','SECURITY','OK','OK',NULL,NULL,'OK','qubership-testing-platform-common-library','ERROR','ERROR','SECURITY','1.8',NULL,'OK','2025-05-20','ERROR','SECURITY','11','OK','Not registered',NULL,NULL,NULL,'<b>qubership-tp</b><br><small></small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-testing-platform-crypt-library','SECURITY','OK','OK',NULL,NULL,'OK','qubership-testing-platform-crypt-library','ERROR','ERROR','SECURITY','1.8',NULL,'OK','2025-05-20','ERROR','SECURITY','11','OK','Not registered',NULL,NULL,NULL,'<b>qubership-tp</b><br><small></small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-testing-platform-environments','SECURITY','OK','OK',NULL,NULL,'OK','qubership-testing-platform-environments','ERROR','ERROR','SECURITY','Not specified',NULL,'OK','2025-05-20','ERROR','SECURITY','12','OK','Not registered',NULL,NULL,NULL,'<b>qubership-tp</b><br><small></small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-testing-platform-export-import-library','SECURITY','OK','OK',NULL,NULL,'OK','qubership-testing-platform-export-import-library','ERROR','ERROR','SECURITY','1.8',NULL,'OK','2025-05-20','ERROR','SECURITY','12','ERROR','Not registered',NULL,NULL,NULL,'<b>qubership-tp</b><br><small></small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-testing-platform-integration-library','SECURITY','OK','OK',NULL,NULL,'OK','qubership-testing-platform-integration-library','ERROR','ERROR','SECURITY','1.8',NULL,'OK','2025-05-20','ERROR','SECURITY','11','OK','Not registered',NULL,NULL,NULL,'<b>qubership-tp</b><br><small></small>','ERROR','WARN','WARN','WARN',NULL)
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-version-exporter','OK','OK','ERROR',NULL,NULL,'ERROR','qubership-version-exporter','OK','OK','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>monitoring, observability</small>','OK','Observability and Analysis','Monitoring','Prometheus Operator, Thanos, VictoriaMetrics','The solution described, ''qubership-version-exporter'', is a tool that collects version information from various sources (Postgres, HTTP, ConfigMaps, and Secrets in Kubernetes) and exports them as Prometheus metrics. This fits squarely within the ''Observab')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-workflow-hub','SECURITY','WARN','ERROR',NULL,NULL,'ERROR','qubership-workflow-hub','OK','OK','SECURITY','INFO',NULL,'OK','2025-05-20','ERROR','SECURITY','8','OK','Not registered',NULL,NULL,NULL,'<b>qubership-devops</b><br><small></small>','OK','App Definition and Development','CI/CD','Argo Workflows, Tekton, Jenkins X','The provided file describes a set of workflows and actions that automate various tasks such as building, testing, and deploying applications, managing releases, and handling pull requests. These functionalities align with CI/CD (Continuous Integration an')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'qubership-zookeeper','ERROR','OK','ERROR',NULL,NULL,'ERROR','qubership-zookeeper','ERROR','ERROR','ERROR','INFO',NULL,'ERROR','2025-05-20','OK','ERROR','13','OK','Not registered',NULL,NULL,NULL,'<b>qubership-infra</b><br><small>saqs, zookeeper</small>','ERROR','n/a','n/a','n/a','The provided content is insufficient to determine the CNCF category or subcategory. It mentions using integration tests based on the Robot Framework, but this does not clearly align with any specific CNCF category. The Robot Framework itself is a generic')
COMMIT
INSERT INTO NC_REPORTS VALUES('2025-05-21 03:19:49.000000',123,'robot-shop','OK','OK','ERROR',NULL,NULL,'ERROR','robot-shop','OK','OK','ERROR','Not specified',NULL,'OK','2025-04-18','OK','OK','5','OK','Not registered',NULL,NULL,NULL,'<b>qubership-observability</b><br><small>example, observability</small>','OK','App Definition and Development','Application Testing','Locust, JMeter, Gatling, k6','The provided file describes a load generation tool that is used to test applications by simulating multiple clients and varying load over time. This fits well within the ''Application Testing'' subcategory of the ''App Definition and Development'' category i')
COMMIT
DISCONNECT
